# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–Ω–∞–ø—à–æ—Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î PostgreSQL
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç psql –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã

$ErrorActionPreference = "Stop"
$OutputEncoding = [System.Text.Encoding]::UTF8

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
$containerName = "field-service-postgres-1"
$dbUser = "fs_user"
$dbName = "field_service"
$outputFile = "db_structure_snapshot_$(Get-Date -Format 'yyyy-MM-dd_HHmmss').txt"

Write-Host "==================================" -ForegroundColor Cyan
Write-Host "–°–û–ó–î–ê–ù–ò–ï –°–ù–ê–ü–®–û–¢–ê –°–¢–†–£–ö–¢–£–†–´ –ë–î" -ForegroundColor Cyan
Write-Host "==================================" -ForegroundColor Cyan
Write-Host ""

# –°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
$header = @"
================================================================================
–°–ù–ê–ü–®–û–¢ –°–¢–†–£–ö–¢–£–†–´ –ë–ê–ó–´ –î–ê–ù–ù–´–• PostgreSQL
================================================================================
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $dbName
================================================================================

"@

$header | Out-File -FilePath $outputFile -Encoding UTF8

Write-Host "üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ë–î..." -ForegroundColor Yellow

# –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ë–î
$generalInfo = @"

================================================================================
–û–ë–©–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
================================================================================
"@

$generalInfo | Out-File -FilePath $outputFile -Append -Encoding UTF8

# –í–µ—Ä—Å–∏—è PostgreSQL
docker exec -i $containerName psql -U $dbUser -d $dbName -c "SELECT version();" | 
    Out-File -FilePath $outputFile -Append -Encoding UTF8

# –†–∞–∑–º–µ—Ä –ë–î
docker exec -i $containerName psql -U $dbUser -d $dbName -c "SELECT pg_size_pretty(pg_database_size('$dbName')) as database_size;" |
    Out-File -FilePath $outputFile -Append -Encoding UTF8

Write-Host "üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–∞–±–ª–∏—Ü..." -ForegroundColor Yellow

# –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏
$tablesInfo = @"

================================================================================
–°–ü–ò–°–û–ö –¢–ê–ë–õ–ò–¶ –° –†–ê–ó–ú–ï–†–ê–ú–ò
================================================================================
"@

$tablesInfo | Out-File -FilePath $outputFile -Append -Encoding UTF8

docker exec -i $containerName psql -U $dbUser -d $dbName -c @"
SELECT 
    tablename,
    pg_size_pretty(pg_total_relation_size(quote_ident(tablename)::regclass)) as size
FROM pg_tables 
WHERE schemaname = 'public' 
ORDER BY pg_total_relation_size(quote_ident(tablename)::regclass) DESC;
"@ | Out-File -FilePath $outputFile -Append -Encoding UTF8

Write-Host "üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü..." -ForegroundColor Yellow

# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
$tables = docker exec -i $containerName psql -U $dbUser -d $dbName -t -c "SELECT tablename FROM pg_tables WHERE schemaname = 'public' ORDER BY tablename;"

# –î–ª—è –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
foreach ($table in $tables) {
    $table = $table.Trim()
    if ([string]::IsNullOrWhiteSpace($table)) { continue }
    
    Write-Host "  ‚Ä¢ $table" -ForegroundColor Gray
    
    $tableHeader = @"

================================================================================
–¢–ê–ë–õ–ò–¶–ê: $table
================================================================================

–°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´:
--------------------------------------------------------------------------------
"@
    
    $tableHeader | Out-File -FilePath $outputFile -Append -Encoding UTF8
    
    # –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    docker exec -i $containerName psql -U $dbUser -d $dbName -c "\d $table" |
        Out-File -FilePath $outputFile -Append -Encoding UTF8
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    "`n" | Out-File -FilePath $outputFile -Append -Encoding UTF8
    "–ö–û–õ–ò–ß–ï–°–¢–í–û –ó–ê–ü–ò–°–ï–ô:" | Out-File -FilePath $outputFile -Append -Encoding UTF8
    "--------------------------------------------------------------------------------" | Out-File -FilePath $outputFile -Append -Encoding UTF8
    
    docker exec -i $containerName psql -U $dbUser -d $dbName -c "SELECT COUNT(*) as count FROM $table;" |
        Out-File -FilePath $outputFile -Append -Encoding UTF8
}

Write-Host "üé≤ –ü–æ–ª—É—á–µ–Ω–∏–µ ENUM —Ç–∏–ø–æ–≤..." -ForegroundColor Yellow

# ENUM —Ç–∏–ø—ã
$enumsInfo = @"

================================================================================
ENUM –¢–ò–ü–´
================================================================================
"@

$enumsInfo | Out-File -FilePath $outputFile -Append -Encoding UTF8

docker exec -i $containerName psql -U $dbUser -d $dbName -c @"
SELECT 
    t.typname as enum_name,
    STRING_AGG(e.enumlabel, ', ' ORDER BY e.enumsortorder) as enum_values
FROM pg_type t
JOIN pg_enum e ON t.oid = e.enumtypid
WHERE t.typnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'public')
GROUP BY t.typname
ORDER BY t.typname;
"@ | Out-File -FilePath $outputFile -Append -Encoding UTF8

Write-Host "üî¢ –ü–æ–ª—É—á–µ–Ω–∏–µ sequences..." -ForegroundColor Yellow

# Sequences
$sequencesInfo = @"

================================================================================
SEQUENCES
================================================================================
"@

$sequencesInfo | Out-File -FilePath $outputFile -Append -Encoding UTF8

docker exec -i $containerName psql -U $dbUser -d $dbName -c @"
SELECT sequencename, last_value 
FROM pg_sequences s
LEFT JOIN LATERAL (
    SELECT last_value FROM pg_sequences WHERE sequencename = s.sequencename
) lv ON true
WHERE schemaname = 'public'
ORDER BY sequencename;
"@ | Out-File -FilePath $outputFile -Append -Encoding UTF8

Write-Host "üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ç–∞–±–ª–∏—Ü–∞–º..." -ForegroundColor Yellow

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
$statsInfo = @"

================================================================================
–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –¢–ê–ë–õ–ò–¶–ê–ú
================================================================================
"@

$statsInfo | Out-File -FilePath $outputFile -Append -Encoding UTF8

docker exec -i $containerName psql -U $dbUser -d $dbName -c @"
SELECT 
    schemaname,
    tablename,
    n_tup_ins as inserts,
    n_tup_upd as updates,
    n_tup_del as deletes,
    n_live_tup as live_rows,
    n_dead_tup as dead_rows
FROM pg_stat_user_tables
ORDER BY n_live_tup DESC;
"@ | Out-File -FilePath $outputFile -Append -Encoding UTF8

Write-Host "üîê –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π –∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..." -ForegroundColor Yellow

# –†–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞
$rolesInfo = @"

================================================================================
–†–û–õ–ò –ò –ü–†–ê–í–ê –î–û–°–¢–£–ü–ê
================================================================================
"@

$rolesInfo | Out-File -FilePath $outputFile -Append -Encoding UTF8

docker exec -i $containerName psql -U $dbUser -d $dbName -c "\du" |
    Out-File -FilePath $outputFile -Append -Encoding UTF8

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
$footer = @"

================================================================================
–°–ù–ê–ü–®–û–¢ –ó–ê–í–ï–†–®–ï–ù
================================================================================
–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
–§–∞–π–ª: $outputFile
================================================================================
"@

$footer | Out-File -FilePath $outputFile -Append -Encoding UTF8

Write-Host ""
Write-Host "‚úÖ –°–Ω–∞–ø—à–æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!" -ForegroundColor Green
Write-Host "üìÑ –§–∞–π–ª: $outputFile" -ForegroundColor Cyan
Write-Host "üìä –†–∞–∑–º–µ—Ä: $((Get-Item $outputFile).Length / 1KB) KB" -ForegroundColor Cyan
Write-Host ""
Write-Host "–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î" -ForegroundColor Yellow
