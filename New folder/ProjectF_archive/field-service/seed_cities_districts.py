"""
Скрипт для заполнения таблиц cities и districts
79 городов + основные районы/округа
"""
import asyncio
import sys
from pathlib import Path

# Добавляем путь к проекту
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
from sqlalchemy.orm import sessionmaker
from sqlalchemy import select, delete

# Импорты из проекта
from field_service.db.models import cities, districts
from field_service.config import settings


# Данные городов: (название, таймзона, список_районов)
CITIES_DATA = [
    # === Топ-15 ===
    ("Москва", "Europe/Moscow", [
        "ЦАО", "САО", "СВАО", "ВАО", "ЮВАО", "ЮАО", "ЮЗАО", "ЗАО", "СЗАО", 
        "Зеленоград", "Новомосковский", "Троицкий"
    ]),
    ("Санкт-Петербург", "Europe/Moscow", [
        "Адмиралтейский", "Василеостровский", "Выборгский", "Калининский", 
        "Кировский", "Колпинский", "Красногвардейский", "Красносельский",
        "Кронштадтский", "Курортный", "Московский", "Невский", "Петроградский",
        "Петродворцовый", "Приморский", "Пушкинский", "Фрунзенский", "Центральный"
    ]),
    ("Новосибирск", "Asia/Novosibirsk", [
        "Дзержинский", "Железнодорожный", "Заельцовский", "Калининский",
        "Кировский", "Ленинский", "Октябрьский", "Первомайский", "Советский", "Центральный"
    ]),
    ("Екатеринбург", "Asia/Yekaterinburg", [
        "Верх-Исетский", "Железнодорожный", "Кировский", "Ленинский",
        "Октябрьский", "Орджоникидзевский", "Чкаловский"
    ]),
    ("Казань", "Europe/Moscow", [
        "Авиастроительный", "Вахитовский", "Кировский", "Московский",
        "Ново-Савиновский", "Приволжский", "Советский"
    ]),
    ("Нижний Новгород", "Europe/Moscow", [
        "Автозаводский", "Канавинский", "Ленинский", "Московский",
        "Нижегородский", "Приокский", "Советский", "Сормовский"
    ]),
    ("Челябинск", "Asia/Yekaterinburg", [
        "Калининский", "Курчатовский", "Ленинский", "Металлургический",
        "Советский", "Тракторозаводский", "Центральный"
    ]),
    ("Красноярск", "Asia/Krasnoyarsk", [
        "Железнодорожный", "Кировский", "Ленинский", "Октябрьский",
        "Свердловский", "Советский", "Центральный"
    ]),
    ("Самара", "Europe/Samara", [
        "Железнодорожный", "Кировский", "Красноглинский", "Куйбышевский",
        "Ленинский", "Октябрьский", "Промышленный", "Самарский", "Советский"
    ]),
    ("Уфа", "Asia/Yekaterinburg", [
        "Демский", "Калининский", "Кировский", "Ленинский",
        "Октябрьский", "Орджоникидзевский", "Советский"
    ]),
    ("Ростов-на-Дону", "Europe/Moscow", [
        "Ворошиловский", "Железнодорожный", "Кировский", "Ленинский",
        "Октябрьский", "Первомайский", "Пролетарский", "Советский"
    ]),
    ("Краснодар", "Europe/Moscow", [
        "Западный", "Карасунский", "Прикубанский", "Центральный"
    ]),
    ("Омск", "Asia/Omsk", [
        "Кировский", "Ленинский", "Октябрьский", "Советский", "Центральный"
    ]),
    ("Воронеж", "Europe/Moscow", [
        "Железнодорожный", "Коминтерновский", "Ленинский", "Левобережный",
        "Советский", "Центральный"
    ]),
    ("Пермь", "Asia/Yekaterinburg", [
        "Дзержинский", "Индустриальный", "Кировский", "Ленинский",
        "Мотовилихинский", "Орджоникидзевский", "Свердловский"
    ]),
    
    # === 500k-1M ===
    ("Волгоград", "Europe/Moscow", [
        "Ворошиловский", "Дзержинский", "Кировский", "Красноармейский",
        "Краснооктябрьский", "Советский", "Тракторозаводский", "Центральный"
    ]),
    ("Саратов", "Europe/Moscow", [
        "Волжский", "Заводской", "Кировский", "Ленинский", "Октябрьский", "Фрунзенский"
    ]),
    ("Тюмень", "Asia/Yekaterinburg", [
        "Калининский", "Ленинский", "Центральный", "Восточный"
    ]),
    ("Тольятти", "Europe/Samara", [
        "Автозаводский", "Комсомольский", "Центральный"
    ]),
    ("Ижевск", "Europe/Samara", [
        "Индустриальный", "Ленинский", "Октябрьский", "Первомайский", "Устиновский"
    ]),
    ("Барнаул", "Asia/Novosibirsk", [
        "Железнодорожный", "Индустриальный", "Ленинский", "Октябрьский", "Центральный"
    ]),
    ("Ульяновск", "Europe/Samara", [
        "Железнодорожный", "Заволжский", "Ленинский", "Засвияжский"
    ]),
    ("Иркутск", "Asia/Irkutsk", [
        "Куйбышевский", "Ленинский", "Октябрьский", "Свердловский"
    ]),
    ("Хабаровск", "Asia/Vladivostok", [
        "Железнодорожный", "Индустриальный", "Кировский", "Краснофлотский", "Центральный"
    ]),
    ("Владивосток", "Asia/Vladivostok", [
        "Ленинский", "Первомайский", "Первореченский", "Советский", "Фрунзенский"
    ]),
    ("Ярославль", "Europe/Moscow", [
        "Дзержинский", "Заволжский", "Кировский", "Красноперекопский", "Ленинский", "Фрунзенский"
    ]),
    ("Махачкала", "Europe/Moscow", [
        "Кировский", "Ленинский", "Советский"
    ]),
    ("Томск", "Asia/Novosibirsk", [
        "Кировский", "Ленинский", "Октябрьский", "Советский"
    ]),
    ("Оренбург", "Asia/Yekaterinburg", [
        "Дзержинский", "Ленинский", "Промышленный", "Центральный"
    ]),
    ("Кемерово", "Asia/Novosibirsk", [
        "Заводский", "Кировский", "Ленинский", "Рудничный", "Центральный"
    ]),
    ("Новокузнецк", "Asia/Novosibirsk", [
        "Центральный", "Заводской", "Кузнецкий", "Куйбышевский", "Новоильинский", "Орджоникидзевский"
    ]),
    ("Рязань", "Europe/Moscow", [
        "Железнодорожный", "Московский", "Октябрьский", "Советский"
    ]),
    ("Набережные Челны", "Europe/Moscow", [
        "Автозаводский", "Комсомольский", "Центральный"
    ]),
    ("Астрахань", "Europe/Moscow", [
        "Кировский", "Ленинский", "Советский", "Трусовский"
    ]),
    ("Пенза", "Europe/Moscow", [
        "Железнодорожный", "Ленинский", "Октябрьский", "Первомайский"
    ]),
    ("Киров", "Europe/Moscow", [
        "Ленинский", "Нововятский", "Октябрьский", "Первомайский"
    ]),
    ("Липецк", "Europe/Moscow", [
        "Левобережный", "Октябрьский", "Правобережный", "Советский"
    ]),
    ("Чебоксары", "Europe/Moscow", [
        "Калининский", "Ленинский", "Московский"
    ]),
    ("Калининград", "Europe/Kaliningrad", [
        "Балтийский", "Ленинградский", "Московский", "Октябрьский", "Центральный"
    ]),
    ("Тула", "Europe/Moscow", [
        "Зареченский", "Привокзальный", "Пролетарский", "Советский", "Центральный"
    ]),
    ("Курск", "Europe/Moscow", [
        "Железнодорожный", "Ленинский", "Сеймский"
    ]),
    ("Сочи", "Europe/Moscow", [
        "Адлерский", "Лазаревский", "Центральный", "Хостинский"
    ]),
    ("Ставрополь", "Europe/Moscow", [
        "Ленинский", "Октябрьский", "Промышленный"
    ]),
    ("Балашиха", "Europe/Moscow", [
        "Железнодорожный", "Новый", "Старый"
    ]),
    ("Севастополь", "Europe/Moscow", [
        "Балаклавский", "Гагаринский", "Ленинский", "Нахимовский"
    ]),
    
    # === 250k-500k ===
    ("Брянск", "Europe/Moscow", [
        "Бежицкий", "Володарский", "Советский", "Фокинский"
    ]),
    ("Белгород", "Europe/Moscow", [
        "Восточный", "Западный"
    ]),
    ("Магнитогорск", "Asia/Yekaterinburg", [
        "Ленинский", "Орджоникидзевский", "Правобережный"
    ]),
    ("Великий Новгород", "Europe/Moscow", [
        "Западный"
    ]),
    ("Калуга", "Europe/Moscow", [
        "Ленинский", "Московский"
    ]),
    ("Сургут", "Asia/Yekaterinburg", [
        "Центральный", "Северный", "Восточный"
    ]),
    ("Владикавказ", "Europe/Moscow", [
        "Затеречный", "Иристонский", "Промышленный", "Северо-Западный"
    ]),
    ("Чита", "Asia/Yakutsk", [
        "Ингодинский", "Железнодорожный", "Центральный", "Черновский"
    ]),
    ("Симферополь", "Europe/Moscow", [
        "Железнодорожный", "Киевский", "Центральный"
    ]),
    ("Волжский", "Europe/Moscow", [
        "Центральный", "Северный", "Южный"
    ]),
    ("Смоленск", "Europe/Moscow", [
        "Заднепровский", "Ленинский", "Промышленный"
    ]),
    ("Саранск", "Europe/Moscow", [
        "Ленинский", "Октябрьский", "Пролетарский"
    ]),
    ("Курган", "Asia/Yekaterinburg", [
        "Центральный", "Промышленный"
    ]),
    ("Орёл", "Europe/Moscow", [
        "Железнодорожный", "Заводской", "Северный", "Советский"
    ]),
    ("Подольск", "Europe/Moscow", [
        "Климовск", "Львовский", "Центральный"
    ]),
    ("Архангельск", "Europe/Moscow", [
        "Ломоносовский", "Маймаксанский", "Октябрьский", "Соломбальский"
    ]),
    ("Грозный", "Europe/Moscow", [
        "Ахматовский", "Байсангуровский", "Заводской", "Старопромысловский"
    ]),
    ("Якутск", "Asia/Yakutsk", [
        "Автодорожный", "Гагаринский", "Октябрьский", "Промышленный", "Сайсарский", "Строительный"
    ]),
    ("Тверь", "Europe/Moscow", [
        "Заволжский", "Московский", "Пролетарский", "Центральный"
    ]),
    ("Старый Оскол", "Europe/Moscow", [
        "Старооскольский", "Юго-Западный"
    ]),
    ("Улан-Удэ", "Asia/Irkutsk", [
        "Железнодорожный", "Октябрьский", "Советский"
    ]),
    ("Нижний Тагил", "Asia/Yekaterinburg", [
        "Дзержинский", "Ленинский", "Тагилстроевский"
    ]),
    ("Нижневартовск", "Asia/Yekaterinburg", [
        "Центральный"
    ]),
    ("Псков", "Europe/Moscow", [
        "Завеличье", "Центр"
    ]),
    ("Йошкар-Ола", "Europe/Moscow", [
        "Заводской", "Ленинский"
    ]),
    ("Кострома", "Europe/Moscow", [
        "Фабричный", "Центральный"
    ]),
    ("Новороссийск", "Europe/Moscow", [
        "Мысхако", "Приморский", "Южный"
    ]),
    ("Дзержинск", "Europe/Moscow", [
        "Восточный", "Западный"
    ]),
    ("Таганрог", "Europe/Moscow", [
        "Западный", "Северный", "Центральный"
    ]),
    ("Химки", "Europe/Moscow", [
        "Левобережный", "Сходня"
    ]),
    ("Березники", "Asia/Yekaterinburg", [
        "Центральный", "Ленинский"
    ]),
    ("Энгельс", "Europe/Moscow", [
        "Центральный"
    ]),
    ("Шахты", "Europe/Moscow", [
        "Западный", "Северо-Восточный", "Центральный"
    ]),
]


async def seed_data():
    """Заполнение таблиц cities и districts"""
    
    # Подключение к БД
    engine = create_async_engine(
        settings.database_url,
        echo=True,
        pool_pre_ping=True
    )
    
    async_session = sessionmaker(
        engine, class_=AsyncSession, expire_on_commit=False
    )
    
    async with async_session() as session:
        try:
            print("\n🗑️  Очистка существующих данных...")
            
            # Удаляем районы (из-за FK)
            await session.execute(delete(districts))
            # Удаляем города
            await session.execute(delete(cities))
            await session.commit()
            
            print("✅ Очистка завершена\n")
            
            print("🌍 Добавление городов и районов...\n")
            
            total_cities = 0
            total_districts = 0
            
            for city_name, tz, districts_list in CITIES_DATA:
                # Создаём город
                city = cities(
                    name=city_name,
                    timezone=tz
                )
                session.add(city)
                await session.flush()  # Получаем ID города
                
                total_cities += 1
                
                # Добавляем районы
                for district_name in districts_list:
                    district = districts(
                        name=district_name,
                        city_id=city.id
                    )
                    session.add(district)
                    total_districts += 1
                
                print(f"  ✓ {city_name} ({tz}): {len(districts_list)} районов")
            
            await session.commit()
            
            print(f"\n✅ Успешно добавлено:")
            print(f"   • Городов: {total_cities}")
            print(f"   • Районов: {total_districts}")
            
        except Exception as e:
            print(f"\n❌ Ошибка: {e}")
            await session.rollback()
            raise
        finally:
            await engine.dispose()


async def verify_data():
    """Проверка загруженных данных"""
    
    engine = create_async_engine(
        settings.database_url,
        echo=False,
        pool_pre_ping=True
    )
    
    async_session = sessionmaker(
        engine, class_=AsyncSession, expire_on_commit=False
    )
    
    async with async_session() as session:
        try:
            # Проверяем города
            result = await session.execute(select(cities))
            all_cities = result.scalars().all()
            
            print(f"\n📊 Проверка данных:")
            print(f"   • Всего городов: {len(all_cities)}")
            
            # Проверяем районы
            result = await session.execute(select(districts))
            all_districts = result.scalars().all()
            
            print(f"   • Всего районов: {len(all_districts)}")
            
            # Примеры
            print(f"\n📋 Примеры:")
            for city in all_cities[:5]:
                result = await session.execute(
                    select(districts).where(districts.city_id == city.id)
                )
                city_districts = result.scalars().all()
                print(f"   • {city.name}: {len(city_districts)} районов")
            
        finally:
            await engine.dispose()


if __name__ == "__main__":
    print("="*60)
    print("🚀 Запуск сидирования городов и районов")
    print("="*60)
    
    asyncio.run(seed_data())
    asyncio.run(verify_data())
    
    print("\n" + "="*60)
    print("✅ Сидирование завершено!")
    print("="*60)
