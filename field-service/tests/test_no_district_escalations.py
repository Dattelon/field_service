"""
–£–ø—Ä–æ—â—ë–Ω–Ω—ã–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è —ç—Å–∫–∞–ª–∞—Ü–∏–π –∑–∞–∫–∞–∑–∞ –±–µ–∑ —Ä–∞–π–æ–Ω–∞

–°—Ü–µ–Ω–∞—Ä–∏–π:
1. –°–æ–∑–¥–∞—ë–º –∑–∞–∫–∞–∑ SEARCHING –±–µ–∑ district_id (no_district=True)
2. –ü—Ä–æ–≥–æ–Ω—è–µ–º tick_once() ‚Üí dist_escalated_logist_at —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
3. –≠–º—É–ª–∏—Ä—É–µ–º 10+ –º–∏–Ω—É—Ç
4. –ü—Ä–æ–≥–æ–Ω—è–µ–º tick_once() —Å–Ω–æ–≤–∞ ‚Üí dist_escalated_admin_at —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
5. –ü—Ä–æ–≤–µ—Ä—è–µ–º timestamps —ç—Å–∫–∞–ª–∞—Ü–∏–π (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, —Ç.–∫. –æ–Ω–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –±–æ—Ç–∞)
"""

import asyncio
import time
from datetime import datetime, timedelta, timezone

import pytest
from sqlalchemy import text
from sqlalchemy.ext.asyncio import AsyncSession

from field_service.db import models as m
from field_service.services.distribution_scheduler import tick_once, DistConfig

UTC = timezone.utc


async def _get_db_now(session: AsyncSession) -> datetime:
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∏–∑ –ë–î –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏"""
    row = await session.execute(text("SELECT NOW()"))
    return row.scalar()


@pytest.mark.asyncio
async def test_no_district_double_escalation_simplified(
    session: AsyncSession,
    sample_city,
    sample_skill,
):
    """
    –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π —Ç–µ—Å—Ç: –ó–∞–∫–∞–∑ –±–µ–∑ —Ä–∞–π–æ–Ω–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –¥–≤–æ–π–Ω—É—é —ç—Å–∫–∞–ª–∞—Ü–∏—é (–ª–æ–≥–∏—Å—Ç ‚Üí –∞–¥–º–∏–Ω)
    
    –ü—Ä–æ–≤–µ—Ä—è–µ–º –¢–û–õ–¨–ö–û timestamps —ç—Å–∫–∞–ª–∞—Ü–∏–π:
    - –ü–µ—Ä–≤—ã–π —Ç–∏–∫: dist_escalated_logist_at —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è, dist_escalated_admin_at = NULL
    - –ü–æ—Å–ª–µ 10+ –º–∏–Ω—É—Ç: dist_escalated_admin_at —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
    """
    
    # ============ –§–ê–ó–ê 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –±–µ–∑ —Ä–∞–π–æ–Ω–∞ ============
    db_now = await _get_db_now(session)
    start_time = time.time()
    
    order = m.orders(
        status=m.OrderStatus.SEARCHING,
        city_id=sample_city.id,
        district_id=None,  # ‚ùå –ù–ï–¢ –†–ê–ô–û–ù–ê
        category=m.OrderCategory.ELECTRICS,
        house="1",
        timeslot_start_utc=db_now + timedelta(hours=2),
        timeslot_end_utc=db_now + timedelta(hours=4),
        assigned_master_id=None,
        no_district=True,  # –§–ª–∞–≥ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–∞–π–æ–Ω–∞
    )
    session.add(order)
    await session.commit()
    await session.refresh(order)
    
    order_id = order.id
    print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑ #{order_id} –±–µ–∑ —Ä–∞–π–æ–Ω–∞ (district_id=None, no_district=True)")
    
    cfg = DistConfig(
        tick_seconds=30,
        sla_seconds=120,
        rounds=2,
        top_log_n=10,
        to_admin_after_min=10,  # ‚è± –ê–¥–º–∏–Ω —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç
    )
    
    # ============ –§–ê–ó–ê 2: –ü–µ—Ä–≤—ã–π —Ç–∏–∫ ‚Üí –≠—Å–∫–∞–ª–∞—Ü–∏—è –ª–æ–≥–∏—Å—Ç—É ============
    print("\nüîÑ –§–ê–ó–ê 2: –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π tick_once()...")
    tick1_start = time.time()
    
    await tick_once(cfg, bot=None, alerts_chat_id=None, session=session)
    
    tick1_duration = time.time() - tick1_start
    print(f"   ‚è± Tick #1 –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ {tick1_duration:.3f}—Å")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    session.expire_all()
    await session.refresh(order)
    
    print(f"   dist_escalated_logist_at: {order.dist_escalated_logist_at}")
    print(f"   dist_escalated_admin_at: {order.dist_escalated_admin_at}")
    
    # ‚úÖ –ü–†–û–í–ï–†–ö–ê 1: –õ–æ–≥–∏—Å—Ç —ç—Å–∫–∞–ª–∏—Ä–æ–≤–∞–Ω
    assert order.dist_escalated_logist_at is not None, \
        "‚ùå –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–∏–∫–∞ dist_escalated_logist_at –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    # ‚úÖ –ü–†–û–í–ï–†–ö–ê 2: –ê–¥–º–∏–Ω —Å–±—Ä–æ—à–µ–Ω (—Ç.–∫. —ç—Ç–æ –ø–µ—Ä–≤–∞—è —ç—Å–∫–∞–ª–∞—Ü–∏—è)
    assert order.dist_escalated_admin_at is None, \
        "‚ùå –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–∏–∫–∞ dist_escalated_admin_at –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å NULL"
    
    print("‚úÖ –§–ê–ó–ê 2 –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –ª–æ–≥–∏—Å—Ç —ç—Å–∫–∞–ª–∏—Ä–æ–≤–∞–Ω, –∞–¥–º–∏–Ω —Å–±—Ä–æ—à–µ–Ω")
    
    first_logist_escalation = order.dist_escalated_logist_at
    
    # ============ –§–ê–ó–ê 3: –≠–º—É–ª—è—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ (10+ –º–∏–Ω—É—Ç) ============
    print("\n‚è≥ –§–ê–ó–ê 3: –≠–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ 11 –º–∏–Ω—É—Ç...")
    
    # –ü–µ—Ä–µ–º–∞—Ç—ã–≤–∞–µ–º —ç—Å–∫–∞–ª–∞—Ü–∏—é –ª–æ–≥–∏—Å—Ç–∞ –Ω–∞ 11 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥
    past_time = db_now - timedelta(minutes=11)
    await session.execute(
        text("""
            UPDATE orders 
            SET dist_escalated_logist_at = :past_time
            WHERE id = :order_id
        """).bindparams(past_time=past_time, order_id=order_id)
    )
    await session.commit()
    print(f"   Timestamp —ç—Å–∫–∞–ª–∞—Ü–∏–∏ –ª–æ–≥–∏—Å—Ç–∞ –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω –Ω–∞ {past_time.isoformat()}")
    
    # ============ –§–ê–ó–ê 4: –í—Ç–æ—Ä–æ–π —Ç–∏–∫ ‚Üí –≠—Å–∫–∞–ª–∞—Ü–∏—è –∞–¥–º–∏–Ω—É ============
    print("\nüîÑ –§–ê–ó–ê 4: –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ç–æ—Ä–æ–π tick_once() (11 –º–∏–Ω—É—Ç —Å–ø—É—Å—Ç—è)...")
    tick2_start = time.time()
    
    await tick_once(cfg, bot=None, alerts_chat_id=None, session=session)
    
    tick2_duration = time.time() - tick2_start
    print(f"   ‚è± Tick #2 –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ {tick2_duration:.3f}—Å")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    session.expire_all()
    await session.refresh(order)
    
    print(f"   dist_escalated_logist_at: {order.dist_escalated_logist_at}")
    print(f"   dist_escalated_admin_at: {order.dist_escalated_admin_at}")
    
    # ‚úÖ –ü–†–û–í–ï–†–ö–ê 3: –õ–æ–≥–∏—Å—Ç –æ—Å—Ç–∞—ë—Ç—Å—è —ç—Å–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º (—Å—Ç–∞—Ä—ã–π timestamp)
    assert order.dist_escalated_logist_at is not None, \
        "‚ùå dist_escalated_logist_at –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ —ç—Å–∫–∞–ª–∞—Ü–∏–∏ –∞–¥–º–∏–Ω—É"
    
    # ‚úÖ –ü–†–û–í–ï–†–ö–ê 4: –ê–¥–º–∏–Ω —ç—Å–∫–∞–ª–∏—Ä–æ–≤–∞–Ω (–Ω–æ–≤—ã–π timestamp)
    assert order.dist_escalated_admin_at is not None, \
        "‚ùå –ü–æ—Å–ª–µ 11 –º–∏–Ω—É—Ç dist_escalated_admin_at –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    # ‚úÖ –ü–†–û–í–ï–†–ö–ê 5: –ê–¥–º–∏–Ω —ç—Å–∫–∞–ª–∏—Ä–æ–≤–∞–Ω –ø–æ–∑–∂–µ –ª–æ–≥–∏—Å—Ç–∞
    assert order.dist_escalated_admin_at > past_time, \
        "‚ùå Timestamp —ç—Å–∫–∞–ª–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–æ–≤–µ–µ timestamp –ª–æ–≥–∏—Å—Ç–∞"
    
    print("‚úÖ –§–ê–ó–ê 4 –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –∞–¥–º–∏–Ω —ç—Å–∫–∞–ª–∏—Ä–æ–≤–∞–Ω")
    
    # ============ –§–ê–ó–ê 5: –¢—Ä–µ—Ç–∏–π —Ç–∏–∫ ‚Üí –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ ============
    print("\nüîÑ –§–ê–ó–ê 5: –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—Ä–µ—Ç–∏–π tick_once() (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)...")
    tick3_start = time.time()
    
    saved_logist_timestamp = order.dist_escalated_logist_at
    saved_admin_timestamp = order.dist_escalated_admin_at
    
    await tick_once(cfg, bot=None, alerts_chat_id=None, session=session)
    
    tick3_duration = time.time() - tick3_start
    print(f"   ‚è± Tick #3 –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ {tick3_duration:.3f}—Å")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    session.expire_all()
    await session.refresh(order)
    
    # ‚úÖ –ü–†–û–í–ï–†–ö–ê 6: Timestamps –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
    assert order.dist_escalated_logist_at == saved_logist_timestamp, \
        "‚ùå Timestamp –ª–æ–≥–∏—Å—Ç–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –º–µ–Ω—è—Ç—å—Å—è –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Ç–∏–∫–∞—Ö"
    
    assert order.dist_escalated_admin_at == saved_admin_timestamp, \
        "‚ùå Timestamp –∞–¥–º–∏–Ω–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –º–µ–Ω—è—Ç—å—Å—è –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Ç–∏–∫–∞—Ö"
    
    print("‚úÖ –§–ê–ó–ê 5 –∑–∞–≤–µ—Ä—à–µ–Ω–∞: timestamps —Å—Ç–∞–±–∏–ª—å–Ω—ã")
    
    # ============ –ò–¢–û–ì–ò ============
    total_duration = time.time() - start_time
    
    print("\n" + "="*60)
    print("‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("="*60)
    print(f"üìä –¢–∞–π–º–∏–Ω–≥–∏:")
    print(f"   Tick #1: {tick1_duration:.3f}—Å")
    print(f"   Tick #2: {tick2_duration:.3f}—Å")
    print(f"   Tick #3: {tick3_duration:.3f}—Å")
    print(f"   –í—Å–µ–≥–æ:   {total_duration:.3f}—Å")
    print("="*60)


if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫: pytest tests/test_no_district_escalations.py::test_no_district_double_escalation_simplified -v -s")
