"""Admin bot keyboards."""
from __future__ import annotations

from typing import Mapping, Sequence, Optional

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from ...core.dto import CommissionDetail, StaffUser, StaffRole


def main_menu(staff: StaffUser) -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —É—á—ë—Ç–æ–º —Ä–æ–ª–µ–π –∏ –¥–æ—Å—Ç—É–ø–æ–≤.
    
    GLOBAL_ADMIN: –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º
    CITY_ADMIN: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏, –º–∞—Å—Ç–µ—Ä–∞–º–∏, —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –≤ —Å–≤–æ–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö
    LOGIST: —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä —ç—Å–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏ –∏ –ª–æ–≥–æ–≤
    """
    kb = InlineKeyboardBuilder()
    
    # –û—á–µ—Ä–µ–¥—å –¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ–º (—Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –ø–æ —Ä–æ–ª—è–º)
    kb.button(text="üì¶ –ó–∞—è–≤–∫–∏", callback_data="adm:orders_menu")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: GLOBAL_ADMIN –∏ CITY_ADMIN
    if staff.role in {StaffRole.GLOBAL_ADMIN, StaffRole.CITY_ADMIN}:
        kb.button(text="‚ûï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑", callback_data="adm:new")
    
    # –ú–∞—Å—Ç–µ—Ä–∞ –∏ –ú–æ–¥–µ—Ä–∞—Ü–∏—è: GLOBAL_ADMIN –∏ CITY_ADMIN
    if staff.role in {StaffRole.GLOBAL_ADMIN, StaffRole.CITY_ADMIN}:
        kb.button(text="üë∑ –ú–∞—Å—Ç–µ—Ä–∞", callback_data="adm:m:grp:ok")
        kb.button(text="üõ† –ú–æ–¥–µ—Ä–∞—Ü–∏—è", callback_data="adm:mod:list:1")
    
    # –§–∏–Ω–∞–Ω—Å—ã: GLOBAL_ADMIN –∏ CITY_ADMIN
    if staff.role in {StaffRole.GLOBAL_ADMIN, StaffRole.CITY_ADMIN}:
        kb.button(text="üí∞ –§–∏–Ω–∞–Ω—Å—ã", callback_data="adm:f")
    
    # –û—Ç—á—ë—Ç—ã: —Ç–æ–ª—å–∫–æ GLOBAL_ADMIN
    if staff.role is StaffRole.GLOBAL_ADMIN:
        kb.button(text="üìä –û—Ç—á—ë—Ç—ã", callback_data="adm:r")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏: —Ç–æ–ª—å–∫–æ GLOBAL_ADMIN
    if staff.role is StaffRole.GLOBAL_ADMIN:
        kb.button(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="adm:s")
    
    # –ü–µ—Ä—Å–æ–Ω–∞–ª: —Ç–æ–ª—å–∫–æ GLOBAL_ADMIN
    if staff.role is StaffRole.GLOBAL_ADMIN:
        kb.button(text="üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª –∏ –¥–æ—Å—Ç—É–ø", callback_data="adm:staff:menu")
    
    # –õ–æ–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ–º
    kb.button(text="üßæ –õ–æ–≥–∏", callback_data="adm:l")
    
    # –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞: –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    kb.adjust(2)
    
    return kb.as_markup()




def orders_menu(staff: StaffUser, counts: Mapping[str, int]) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ "–ó–∞—è–≤–∫–∏" c —Å—á—ë—Ç—á–∏–∫–∞–º–∏."""
    kb = InlineKeyboardBuilder()

    kb.button(text="üîç –ü–æ–∏—Å–∫ –ø–æ ID", callback_data="adm:q:search")
    kb.button(text="üîß –§–∏–ª—å—Ç—Ä—ã", callback_data="adm:q:flt")

    queue_count = int(counts.get('queue', 0))
    guarantee_count = int(counts.get('guarantee', 0))
    closed_count = int(counts.get('closed', 0))

    kb.button(
        text=f"üìã –û—á–µ—Ä–µ–¥—å ({queue_count})",
        callback_data="adm:orders:queue:1",
    )
    kb.button(
        text=f"üõ° –ù–∞ –≥–∞—Ä–∞–Ω—Ç–∏–∏ ({guarantee_count})",
        callback_data="adm:orders:warranty:1",
    )
    kb.button(
        text=f"‚úÖ –ó–∞–∫—Ä—ã—Ç—ã–µ ({closed_count})",
        callback_data="adm:orders:closed:1",
    )

    kb.button(text="üè† –í –º–µ–Ω—é", callback_data="adm:menu")
    kb.adjust(2, 1, 1, 1, 1)
    return kb.as_markup()




def back_to_menu() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="adm:menu")
    return kb.as_markup()



