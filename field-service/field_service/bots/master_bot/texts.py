from __future__ import annotations

import html
from dataclasses import dataclass
from typing import Iterable, Mapping

from field_service.db import models as m

# Onboarding flow texts (missing constants used by handlers)
ONBOARDING_ALREADY_VERIFIED = "–í—ã —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã."
ONBOARDING_SENT = "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é."
ONBOARDING_SUMMARY_HEADER = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã:"

MASTER_PDN_CONSENT = (
    "–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n\n"
    "–Ø —Ä–∞–∑—Ä–µ—à–∞—é Field Service –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –º–æ–∏ –§–ò–û, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Å–≤–µ–¥–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö –¥–ª—è –∑–∞–∫–ª—é—á–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã.\n\n"
    "–Ø –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω —Å —Ç–µ–º, —á—Ç–æ –º–æ–≥—É –æ—Ç–æ–∑–≤–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ, –Ω–∞–ø–∏—Å–∞–≤ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–µ—Ä–≤–∏—Å–∞."
)

MASTER_PDN_DECLINED = (
    "–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ú—ã –Ω–µ —Å–º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é."
)

START_NOT_APPROVED = (
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Field Service! –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.\n\n"
    "–ú—ã —Å–æ–æ–±—â–∏–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ. –ü–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏."
)

START_BLOCKED = (
    "–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n"
    "–ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å–µ—Ä–≤–∏—Å–∞."
)

START_APPROVED = (
    "–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –Ω–∞ —Å–º–µ–Ω–µ! –í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —Å–º–µ–Ω—É, –±—Ä–∞—Ç—å –∑–∞—è–≤–∫–∏ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏."
)

FSM_TIMEOUT_MESSAGE = "–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ù–∞–∂–º–∏—Ç–µ /start"

MAIN_MENU_BUTTONS = {
    "shift_on": "üü¢ –í–∫–ª—é—á–∏—Ç—å —Å–º–µ–Ω—É",
    "shift_break": "‚òï –ü–µ—Ä–µ—Ä—ã–≤",
    "shift_break_end": "üü¢ –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–º–µ–Ω—É",
    "shift_off": "üî¥ –í—ã–∫–ª—é—á–∏—Ç—å —Å–º–µ–Ω—É",
    "new_orders": "üÜï –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã",
    "active_orders": "üì¶ –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã",
    "active_order": "üì¶ –ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑",
    "history": "üìú –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤",
    "finance": "üí≥ –§–∏–Ω–∞–Ω—Å—ã",
    "payment_requisites": "üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã",
    "referral": "üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
    "statistics": "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    "knowledge": "üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π",
    "start_onboarding": "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É",
}

ORDER_STATUS_TITLES: Mapping[m.OrderStatus, str] = {
    m.OrderStatus.ASSIGNED: "–ù–∞–∑–Ω–∞—á–µ–Ω–æ –º–∞—Å—Ç–µ—Ä—É",
    m.OrderStatus.EN_ROUTE: "–ú–∞—Å—Ç–µ—Ä –≤ –ø—É—Ç–∏",
    m.OrderStatus.WORKING: "–ú–∞—Å—Ç–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç",
    m.OrderStatus.PAYMENT: "–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã",
    m.OrderStatus.CLOSED: "–ó–∞–∫–∞–∑ –∑–∞–∫—Ä—ã—Ç",
    m.OrderStatus.DEFERRED: "–ó–∞–∫–∞–∑ –æ—Ç–ª–æ–∂–µ–Ω",
    m.OrderStatus.GUARANTEE: "–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –≤–∏–∑–∏—Ç",
    m.OrderStatus.CANCELED: "–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω",
    m.OrderStatus.CREATED: "–°–æ–∑–¥–∞–Ω",
    m.OrderStatus.SEARCHING: "–ò–¥—ë—Ç –ø–æ–∏—Å–∫ –º–∞—Å—Ç–µ—Ä–∞",
}

SHIFT_MESSAGES = {
    "started": "–°–º–µ–Ω–∞ –Ω–∞—á–∞—Ç–∞.",
    "finished": "–°–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.",
    "break_choose": "‚òï –í—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ä—ã–≤–∞:",
    "break_started": "–ü–µ—Ä–µ—Ä—ã–≤ –Ω–∞—á–∞—Ç.",
    "break_finished": "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ —Å–º–µ–Ω—É.",
    "break_extend_choose": "‚òï –ù–∞ —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥–ª–∏—Ç—å –ø–µ—Ä–µ—Ä—ã–≤?",
    "break_extended": "–ü–µ—Ä–µ—Ä—ã–≤ –ø—Ä–æ–¥–ª—ë–Ω.",
    "inactive": "–°–º–µ–Ω–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞.",
    "not_break": "–°–µ–π—á–∞—Å –Ω–µ –ø–µ—Ä–µ—Ä—ã–≤.",
    "blocked": "–°–º–µ–Ω–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.",
    "pending": "–ü—Ä–æ—Ñ–∏–ª—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–¥–æ–±—Ä–µ–Ω–∏—è.",
}

OFFERS_EMPTY = "–ù–µ—Ç –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π"
OFFERS_REFRESH_BUTTON = "üîÑ –û–±–Ω–æ–≤–∏—Ç—å"
OFFERS_HEADER_TEMPLATE = "<b>üÜï –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã</b>\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}/{pages} ‚Ä¢ –≤—Å–µ–≥–æ: {total}"


def _escape(value: str | None) -> str:
    return html.escape(value or "‚Äî")


def offer_line(order_id: int, city: str, district: str | None, category: str, timeslot: str | None) -> str:
    district_part = f", {_escape(district)}" if district else ""
    slot = _escape(timeslot or "—Å–µ–≥–æ–¥–Ω—è/ASAP")
    return f"#{order_id} ‚Ä¢ {_escape(city)}{district_part} ‚Ä¢ {_escape(category)} ‚Ä¢ {slot}"


def offer_card(
    *,
    order_id: int,
    city: str,
    district: str | None,
    street: str | None,
    house: str | None,
    timeslot: str | None,
    category: str,
    description: str | None,
) -> str:
    address_parts: list[str] = [
        _escape(city),
    ]
    if district:
        address_parts.append(_escape(district))
    if street:
        address_parts.append(_escape(street))
    if house:
        address_parts.append(_escape(str(house)))
    address = ", ".join(address_parts)
    description_text = _escape(description.strip() if description else "‚Äî")
    slot = _escape(timeslot or "‚Äî")
    lines = [
        f"<b>–ó–∞—è–≤–∫–∞ #{order_id}</b>",
        f"üìç –ê–¥—Ä–µ—Å: {address}",
        f"üóì –°–ª–æ—Ç: {slot}",
        f"üõ† –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {_escape(category)}",
        f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {description_text}",
    ]
    return "\n".join(lines)


@dataclass(slots=True)
class ActiveOrderCard:
    order_id: int
    city: str
    district: str | None
    street: str | None
    house: str | None
    timeslot: str | None
    status: m.OrderStatus
    category: str | None = None

    def lines(self) -> list[str]:
        address_parts: list[str] = [_escape(self.city)]
        if self.district:
            address_parts.append(_escape(self.district))
        if self.street:
            address_parts.append(_escape(self.street))
        if self.house:
            address_parts.append(_escape(str(self.house)))
        address = ", ".join(address_parts)
        status_title = _escape(ORDER_STATUS_TITLES.get(self.status, self.status.value))
        slot = _escape(self.timeslot or "‚Äî")
        lines = [
            f"<b>–ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ #{self.order_id}</b>",
            f"üìç –ê–¥—Ä–µ—Å: {address}",
            f"üóì –°–ª–æ—Ç: {slot}",
            f"üîÅ –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status_title}",
        ]
        if self.category:
            lines.insert(3, f"üõ† –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {_escape(self.category)}")
        return lines


ACTIVE_STATUS_ACTIONS: Mapping[m.OrderStatus, tuple[str, str]] = {
    m.OrderStatus.ASSIGNED: ("üöó –í –ø—É—Ç–∏", "m:act:enr"),
    m.OrderStatus.EN_ROUTE: ("üõ† –ù–∞ –º–µ—Å—Ç–µ", "m:act:wrk"),
    m.OrderStatus.WORKING: ("üßæ –ó–∞–∫—Ä—ã—Ç—å", "m:act:cls"),
}

CLOSE_AMOUNT_PROMPT = "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ –∑–∞–∫–∞–∑—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 3500 –∏–ª–∏ 4999.99)."
CLOSE_AMOUNT_ERROR = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ —á–∏—Å–ª–æ —Å –¥–≤—É–º—è –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏."
CLOSE_ACT_PROMPT = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–∫—Ç (—Ñ–æ—Ç–æ –∏–ª–∏ PDF –æ–¥–Ω–∏–º —Ñ–∞–π–ª–æ–º)."
CLOSE_SUCCESS_TEMPLATE = "–ó–∞–∫–∞–∑ #{order_id} –∑–∞–∫—Ä—ã—Ç. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É!"
CLOSE_PAYMENT_TEMPLATE = "–ó–∞–∫–∞–∑ #{order_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –æ–ø–ª–∞—Ç—É. –°—É–º–º–∞: {amount:.2f} ‚ÇΩ"
CLOSE_DOCUMENT_RECEIVED = "–î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∏–º –∏ —Å–æ–æ–±—â–∏–º –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ."
CLOSE_DOCUMENT_ERROR = "–ù—É–∂–µ–Ω –æ–¥–∏–Ω —Ñ–∞–π–ª: —Ñ–æ—Ç–æ –∏–ª–∏ PDF. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."

# –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞–∫–∞–∑–∞
CLOSE_NEXT_STEPS = (
    "‚úÖ <b>–ó–∞–∫–∞–∑ #{order_id} –∑–∞–∫—Ä—ã—Ç!</b>\n"
    "–°—É–º–º–∞: {amount:.2f} ‚ÇΩ\n\n"
    "üìã <b>–ß—Ç–æ –¥–∞–ª—å—à–µ:</b>\n"
    "1Ô∏è‚É£ –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –∫–æ–º–∏—Å—Å–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n"
    "2Ô∏è‚É£ –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã\n"
    "3Ô∏è‚É£ –ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏—è –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∞\n\n"
    "üí≥ –°–ª–µ–¥–∏—Ç—å –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º –º–æ–∂–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–§–∏–Ω–∞–Ω—Å—ã</b>\n\n"
    "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É! üéâ"
)

CLOSE_GUARANTEE_SUCCESS = (
    "‚úÖ <b>–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –∑–∞–∫–∞–∑ #{order_id} –∑–∞–∫—Ä—ã—Ç!</b>\n\n"
    "–î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.\n\n"
    "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É! üéâ"
)

OFFER_NOT_FOUND = "–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –µ—ë —É–∂–µ –ø—Ä–∏–Ω—è–ª–∏ –¥—Ä—É–≥–∏–º –º–∞—Å—Ç–µ—Ä–æ–º."

# P0-1: –î–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞
OFFER_DECLINE_CONFIRM = "‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ #{order_id}?\n\n–û—Ç–∫–ª–æ–Ω—ë–Ω–Ω—ã–π –∑–∞–∫–∞–∑ –ø—Ä–æ–ø–∞–¥—ë—Ç –∏–∑ —Å–ø–∏—Å–∫–∞."

NAV_BACK = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
NAV_PREV = "‚óÄÔ∏è –ù–∞–∑–∞–¥"
NAV_NEXT = "–í–ø–µ—Ä—ë–¥ ‚ñ∂Ô∏è"
NAV_MENU = "üè† –ú–µ–Ω—é"
NO_ACTIVE_ORDERS = "–°–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤."
 
# P1-9: –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤
HISTORY_EMPTY = (
    "üì≠ –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞.\n\n"
    "–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –º–µ–Ω—é –∏ –±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã."
)
HISTORY_HEADER_TEMPLATE = (
    "<b>üìú –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</b>\n"
    "–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}/{pages} ‚Ä¢ –≤—Å–µ–≥–æ: {total}"
)
HISTORY_STATS_TEMPLATE = (
    "‚Ä¢ <b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ:</b> {total_completed}\n"
    "‚Ä¢ <b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ:</b> {total_earned:.2f} ‚ÇΩ\n"
    "‚Ä¢ <b>–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥:</b> {avg_rating}"
)

def history_order_line(
    order_id: int,
    status: str,
    city: str,
    district: str | None,
    category: str,
    timeslot: str | None,
) -> str:
    district_part = f", {_escape(district)}" if district else ""
    slot = _escape(timeslot or "‚Äî")
    st = (status or "").lower()
    emoji = "‚úÖ" if "–∑–∞–∫—Ä—ã" in st else ("üö´" if "–æ—Ç–º–µ–Ω" in st else "‚Ä¢")
    return f"{emoji} #{order_id} ‚Ä¢ {_escape(city)}{district_part} ‚Ä¢ {_escape(category)} ‚Ä¢ {slot}"


def history_order_card(
    *,
    order_id: int,
    status: str,
    city: str,
    district: str | None,
    street: str | None,
    house: str | None,
    apartment: str | None,
    address_comment: str | None,
    category: str,
    description: str | None,
    timeslot: str | None,
    client_name: str | None,
    client_phone: str | None,
    final_amount: float | None,
    created_at,
    closed_at,
) -> str:
    address_parts: list[str] = [_escape(city)]
    if district:
        address_parts.append(_escape(district))
    if street:
        address_parts.append(_escape(street))
    if house:
        address_parts.append(_escape(str(house)))
    address = ", ".join(address_parts)
    slot = _escape(timeslot or "‚Äî")
    lines = [
        f"<b>–ó–∞–∫–∞–∑ #{order_id}</b>",
        f"üîÅ –°—Ç–∞—Ç—É—Å: {_escape(status)}",
        f"üìç –ê–¥—Ä–µ—Å: {address}",
        f"üóì –°–ª–æ—Ç: {slot}",
        f"üõ† –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {_escape(category)}",
    ]
    if description:
        lines.append(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {_escape(description.strip())}")
    if client_name:
        lines.append(f"üë§ –ö–ª–∏–µ–Ω—Ç: {_escape(client_name)}")
    if client_phone:
        lines.append(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {_escape(client_phone)}")
    if isinstance(final_amount, (int, float)):
        lines.append(f"üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {final_amount:.2f} ‚ÇΩ")
    return "\n".join(lines)

# –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
def alert_account_blocked(reason: str | None = None) -> str:
    base_text = "‚õîÔ∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω."
    if reason:
        return f"{base_text}\n\n<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {html.escape(reason)}\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏."
    return f"{base_text}\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π."

ALERT_ACCOUNT_BLOCKED = alert_account_blocked()

ALERT_LIMIT_REACHED = "–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤. –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–∏–µ, —á—Ç–æ–±—ã –±—Ä–∞—Ç—å –Ω–æ–≤—ã–µ."
ALERT_ALREADY_TAKEN = "–£–ø—Å, –∑–∞–∫–∞–∑ —É–∂–µ –∑–∞–±—Ä–∞–ª–∏ –¥—Ä—É–≥–∏–º –º–∞—Å—Ç–µ—Ä–æ–º"
ALERT_ACCEPT_SUCCESS = "–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –£–¥–∞—á–∏ –≤ —Ä–∞–±–æ—Ç–µ!"
ALERT_DECLINE_SUCCESS = "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ."
ALERT_EN_ROUTE_FAIL = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∑–∞–∫–∞–∑ –≤ —Å—Ç–∞—Ç—É—Å ¬´–í –ø—É—Ç–∏¬ª. –û–±–Ω–æ–≤–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
ALERT_EN_ROUTE_SUCCESS = "–û—Ç–º–µ—Ç–∏–ª–∏, —á—Ç–æ –≤—ã –≤ –ø—É—Ç–∏."
ALERT_WORKING_FAIL = "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ—Ç–∏—Ç—å –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã. –û–±–Ω–æ–≤–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
ALERT_WORKING_SUCCESS = "–û—Ç–º–µ—Ç–∏–ª–∏, —á—Ç–æ –≤—ã —É–∂–µ –Ω–∞ –º–µ—Å—Ç–µ."
ALERT_CLOSE_NOT_FOUND = "–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –∑–∞–Ω–æ–≤–æ."
ALERT_CLOSE_STATUS = "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏–∑–º–µ–Ω–∏–ª—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞."
ALERT_CLOSE_NOT_ALLOWED = "–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å."
ALERT_ORDER_NOT_FOUND = "–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω."

REFERRAL_EMPTY = "–ü–æ–∫–∞ –Ω–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ."
FINANCE_EMPTY = "–ö–æ–º–∏—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
