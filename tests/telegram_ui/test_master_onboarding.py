"""
–¢–µ—Å—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –º–∞—Å—Ç–µ—Ä–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–µ—Ä–≤–∏—á–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞—Å—Ç–µ—Ä–∞ –≤ –±–æ—Ç–µ
"""

import pytest
import asyncio
from tests.telegram_ui.bot_client import BotTestClient
from tests.telegram_ui.config import MASTER_BOT_USERNAME, TEST_CITY, TEST_DISTRICT


@pytest.mark.telegram_ui
@pytest.mark.asyncio
async def test_master_start_command():
    """–¢–µ—Å—Ç: –∫–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –Ω–æ–≤–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞"""
    
    async with BotTestClient() as client:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º /start
        message = await client.send_command(MASTER_BOT_USERNAME, "/start")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        client.assert_text_in_message("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å", message)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
        client.assert_has_buttons([f"üèô {TEST_CITY}"], message)


@pytest.mark.telegram_ui
@pytest.mark.asyncio
async def test_master_select_city():
    """–¢–µ—Å—Ç: –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ"""
    
    async with BotTestClient() as client:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º /start
        await client.send_command(MASTER_BOT_USERNAME, "/start")
        
        # –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –≥–æ—Ä–æ–¥
        message = await client.click_button(f"üèô {TEST_CITY}", MASTER_BOT_USERNAME)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ—à–ª–∏ –∫ –≤—ã–±–æ—Ä—É —Ä–∞–π–æ–Ω–∞
        client.assert_text_in_message("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω", message)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ —Å —Ä–∞–π–æ–Ω–∞–º–∏ (–¥–ª—è –ú–æ—Å–∫–≤—ã)
        if TEST_CITY == "–ú–æ—Å–∫–≤–∞":
            client.assert_has_buttons(["–¶–ê–û", "–°–ê–û", "–í–ê–û"], message)


@pytest.mark.telegram_ui
@pytest.mark.asyncio
async def test_master_select_district():
    """–¢–µ—Å—Ç: –≤—ã–±–æ—Ä —Ä–∞–π–æ–Ω–∞ –ø—Ä–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ"""
    
    async with BotTestClient() as client:
        # –°—Ç–∞—Ä—Ç—É–µ–º –∏ –≤—ã–±–∏—Ä–∞–µ–º –≥–æ—Ä–æ–¥
        await client.send_command(MASTER_BOT_USERNAME, "/start")
        await client.click_button(f"üèô {TEST_CITY}", MASTER_BOT_USERNAME)
        
        # –í—ã–±–∏—Ä–∞–µ–º —Ä–∞–π–æ–Ω
        message = await client.click_button(TEST_DISTRICT, MASTER_BOT_USERNAME)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ—à–ª–∏ –∫ –≤–≤–æ–¥—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        client.assert_text_in_message("—Ç–µ–ª–µ—Ñ–æ–Ω", message)


@pytest.mark.telegram_ui
@pytest.mark.asyncio
async def test_master_full_onboarding():
    """–¢–µ—Å—Ç: –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –º–∞—Å—Ç–µ—Ä–∞"""
    
    async with BotTestClient() as client:
        print("\n=== –ù–∞—á–∞–ª–æ –ø–æ–ª–Ω–æ–≥–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –º–∞—Å—Ç–µ—Ä–∞ ===")
        
        # –®–∞–≥ 1: /start
        print("\n[1/4] –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start...")
        message = await client.send_command(MASTER_BOT_USERNAME, "/start")
        client.assert_text_in_message("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å", message)
        
        # –®–∞–≥ 2: –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
        print(f"\n[2/4] –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞: {TEST_CITY}...")
        message = await client.click_button(f"üèô {TEST_CITY}", MASTER_BOT_USERNAME)
        client.assert_text_in_message("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω", message)
        
        # –®–∞–≥ 3: –í—ã–±–æ—Ä —Ä–∞–π–æ–Ω–∞
        print(f"\n[3/4] –í—ã–±–æ—Ä —Ä–∞–π–æ–Ω–∞: {TEST_DISTRICT}...")
        message = await client.click_button(TEST_DISTRICT, MASTER_BOT_USERNAME)
        client.assert_text_in_message("—Ç–µ–ª–µ—Ñ–æ–Ω", message)
        
        # –®–∞–≥ 4: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        print(f"\n[4/4] –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞...")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω
        # message = await client.send_command(MASTER_BOT_USERNAME, TEST_MASTER_PHONE)
        
        print("\n‚úÖ –û–Ω–±–æ—Ä–¥–∏–Ω–≥ –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")


if __name__ == "__main__":
    # –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    asyncio.run(test_master_start_command())
