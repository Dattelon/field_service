"""
Скрипт для исправления кодировки onboarding.py и заполнения БД городами/районами
"""
import asyncio
import sys
from pathlib import Path

# Исправление кодировки onboarding.py
def fix_encoding():
    path = Path(r'C:\ProjectF\field-service\field_service\bots\master_bot\handlers\onboarding.py')
    
    # Читаем с разными кодировками
    content = None
    successful_encoding = None
    
    for encoding in ['cp1251', 'windows-1251', 'utf-8', 'latin-1']:
        try:
            with open(path, 'r', encoding=encoding, errors='replace') as f:
                content = f.read()
            successful_encoding = encoding
            print(f"OK: File read with {encoding}")
            break
        except Exception as e:
            print(f"FAIL: Cannot read with {encoding}")
            continue
    
    if content and successful_encoding:
        # Сохраняем в UTF-8 без BOM
        try:
            with open(path, 'w', encoding='utf-8', newline='\n') as f:
                f.write(content)
            print(f"OK: File saved as UTF-8")
            return True
        except Exception as e:
            print(f"FAIL: Cannot save file: {e}")
            return False
    else:
        print("FAIL: Could not read file with any encoding")
        return False


# Данные городов с районами из ТЗ
CITIES_WITH_DISTRICTS = {
    # Топ-15
    "Москва": ["ЦАО", "САО", "СВАО", "ВАО", "ЮВАО", "ЮАО", "ЮЗАО", "ЗАО", "СЗАО", "Зеленоград", "Новомосковский", "Троицкий"],
    "Санкт-Петербург": ["Адмиралтейский", "Василеостровский", "Выборгский", "Калининский", "Кировский", "Колпинский", "Красногвардейский", "Красносельский", "Кронштадтский", "Курортный", "Московский", "Невский", "Петроградский", "Петродворцовый", "Приморский", "Пушкинский", "Фрунзенский", "Центральный"],
    "Новосибирск": ["Железнодорожный", "Заельцовский", "Калининский", "Кировский", "Ленинский", "Октябрьский", "Первомайский", "Советский", "Центральный", "Дзержинский"],
    "Екатеринбург": ["Верх-Исетский", "Железнодорожный", "Кировский", "Ленинский", "Октябрьский", "Орджоникидзевский", "Чкаловский"],
    "Казань": ["Авиастроительный", "Вахитовский", "Кировский", "Московский", "Ново-Савиновский", "Приволжский", "Советский"],
    "Нижний Новгород": ["Автозаводский", "Канавинский", "Ленинский", "Московский", "Нижегородский", "Приокский", "Советский", "Сормовский"],
    "Челябинск": ["Калининский", "Курчатовский", "Ленинский", "Металлургический", "Советский", "Тракторозаводский", "Центральный"],
    "Красноярск": ["Железнодорожный", "Кировский", "Ленинский", "Октябрьский", "Свердловский", "Советский", "Центральный"],
    "Самара": ["Железнодорожный", "Кировский", "Красноглинский", "Куйбышевский", "Ленинский", "Октябрьский", "Промышленный", "Самарский", "Советский"],
    "Уфа": ["Демский", "Калининский", "Кировский", "Ленинский", "Октябрьский", "Орджоникидзевский", "Советский"],
    "Ростов-на-Дону": ["Ворошиловский", "Железнодорожный", "Кировский", "Ленинский", "Октябрьский", "Первомайский", "Пролетарский", "Советский"],
    "Краснодар": ["Карасунский", "Прикубанский", "Центральный", "Западный"],
    "Омск": ["Кировский", "Ленинский", "Октябрьский", "Советский", "Центральный"],
    "Воронеж": ["Железнодорожный", "Коминтерновский", "Ленинский", "Левобережный", "Советский", "Центральный"],
    "Пермь": ["Дзержинский", "Индустриальный", "Кировский", "Ленинский", "Мотовилихинский", "Орджоникидзевский", "Свердловский"],
    
    # 500k-1M и крупные центры
    "Волгоград": ["Тракторозаводский", "Краснооктябрьский", "Центральный", "Дзержинский", "Ворошиловский", "Советский", "Кировский", "Красноармейский"],
    "Саратов": ["Волжский", "Заводской", "Кировский", "Ленинский", "Октябрьский", "Фрунзенский"],
    "Тюмень": ["Калининский", "Ленинский", "Центральный", "Восточный"],
    "Тольятти": ["Автозаводский", "Комсомольский", "Центральный"],
    "Ижевск": ["Индустриальный", "Ленинский", "Октябрьский", "Первомайский", "Устиновский"],
    "Барнаул": ["Железнодорожный", "Индустриальный", "Ленинский", "Октябрьский", "Центральный"],
    "Ульяновск": ["Железнодорожный", "Заволжский", "Ленинский", "Засвияжский"],
    "Иркутск": ["Кировский", "Ленинский", "Октябрьский", "Свердловский"],
    "Хабаровск": ["Железнодорожный", "Индустриальный", "Кировский", "Краснофлотский", "Центральный"],
    "Владивосток": ["Ленинский", "Первомайский", "Первореченский", "Советский", "Фрунзенский"],
    "Ярославль": ["Дзержинский", "Заволжский", "Кировский", "Красноперекопский", "Ленинский", "Фрунзенский"],
    "Махачкала": ["Кировский", "Ленинский", "Советский"],
    "Томск": ["Кировский", "Ленинский", "Октябрьский", "Советский"],
    "Оренбург": ["Дзержинский", "Ленинский", "Промышленный", "Центральный"],
    "Кемерово": ["Заводский", "Кировский", "Ленинский", "Рудничный", "Центральный"],
    "Новокузнецк": ["Заводской", "Кузнецкий", "Куйбышевский", "Новоильинский", "Орджоникидзевский", "Центральный"],
    "Рязань": ["Железнодорожный", "Московский", "Октябрьский", "Советский"],
    "Набережные Челны": ["Автозаводский", "Комсомольский", "Центральный"],
    "Астрахань": ["Кировский", "Ленинский", "Советский", "Трусовский"],
    "Пенза": ["Железнодорожный", "Ленинский", "Октябрьский", "Первомайский"],
    "Киров": ["Ленинский", "Октябрьский", "Первомайский", "Нововятский"],
    "Липецк": ["Левобережный", "Октябрьский", "Правобережный", "Советский"],
    "Чебоксары": ["Калининский", "Ленинский", "Московский"],
    "Калининград": ["Балтийский", "Ленинградский", "Московский", "Октябрьский", "Центральный"],
    "Тула": ["Зареченский", "Привокзальный", "Пролетарский", "Советский", "Центральный"],
    "Курск": ["Железнодорожный", "Ленинский", "Сеймский"],
    "Сочи": ["Адлерский", "Лазаревский", "Хостинский", "Центральный"],
    "Ставрополь": ["Ленинский", "Октябрьский", "Промышленный"],
    "Балашиха": ["Центральный"],
    "Севастополь": ["Гагаринский", "Ленинский", "Нахимовский", "Балаклавский"],
    
    # 250k-500k
    "Брянск": ["Бежицкий", "Володарский", "Советский", "Фокинский"],
    "Белгород": ["Восточный", "Западный"],
    "Магнитогорск": ["Ленинский", "Орджоникидзевский", "Правобережный"],
    "Великий Новгород": ["Центральный"],
    "Калуга": ["Ленинский", "Московский", "Октябрьский"],
    "Сургут": ["Центральный"],
    "Владикавказ": ["Иристонский", "Промышленный", "Затеречный"],
    "Чита": ["Ингодинский", "Железнодорожный", "Центральный", "Черновский"],
    "Симферополь": ["Киевский", "Железнодорожный", "Центральный"],
    "Волжский": ["Центральный"],
    "Смоленск": ["Заднепровский", "Ленинский", "Промышленный"],
    "Саранск": ["Ленинский", "Октябрьский", "Пролетарский"],
    "Курган": ["Центральный"],
    "Орёл": ["Заводской", "Железнодорожный", "Северный", "Советский"],
    "Подольск": ["Центральный"],
    "Архангельск": ["Ломоносовский", "Маймаксанский", "Октябрьский", "Соломбальский"],
    "Грозный": ["Ахматовский", "Ленинский", "Октябрьский", "Старопромысловский"],
    "Якутск": ["Автодорожный", "Гагаринский", "Промышленный", "Сайсарский", "Строительный"],
    "Тверь": ["Заволжский", "Московский", "Пролетарский", "Центральный"],
    "Старый Оскол": ["Центральный"],
    "Улан-Удэ": ["Железнодорожный", "Октябрьский", "Советский"],
    "Нижний Тагил": ["Ленинский", "Тагилстроевский", "Дзержинский"],
    "Нижневартовск": ["Центральный"],
    "Псков": ["Центральный"],
    "Йошкар-Ола": ["Ленинский"],
    "Кострома": ["Центральный"],
    "Новороссийск": ["Центральный"],
    "Дзержинск": ["Центральный"],
    "Таганрог": ["Центральный"],
    "Химки": ["Центральный"],
    "Березники": ["Центральный"],
    "Энгельс": ["Центральный"],
    "Шахты": ["Центральный"],
}


async def seed_cities_and_districts():
    """Заполнение БД городами и районами"""
    from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
    from sqlalchemy.orm import sessionmaker
    from sqlalchemy import select
    from field_service.db.models import cities, districts
    
    # Подключение к БД
    engine = create_async_engine(
        "postgresql+asyncpg://field_user:field_pass@localhost:5432/field_service",
        echo=False
    )
    
    async_session = sessionmaker(
        engine, class_=AsyncSession, expire_on_commit=False
    )
    
    async with async_session() as session:
        # Таймзоны городов
        timezones = {
            "Москва": "Europe/Moscow",
            "Санкт-Петербург": "Europe/Moscow",
            "Калининград": "Europe/Kaliningrad",
            "Самара": "Europe/Samara",
            "Екатеринбург": "Asia/Yekaterinburg",
            "Омск": "Asia/Omsk",
            "Новосибирск": "Asia/Novosibirsk",
            "Красноярск": "Asia/Krasnoyarsk",
            "Иркутск": "Asia/Irkutsk",
            "Якутск": "Asia/Yakutsk",
            "Владивосток": "Asia/Vladivostok",
        }
        
        # Дефолтная таймзона для городов без явного указания
        default_tz = "Europe/Moscow"
        
        created_cities = 0
        created_districts = 0
        
        for city_name, district_names in CITIES_WITH_DISTRICTS.items():
            # Проверяем существует ли город
            result = await session.execute(
                select(cities).where(cities.name == city_name)
            )
            city = result.scalar_one_or_none()
            
            if not city:
                # Создаём город
                tz = timezones.get(city_name, default_tz)
                city = cities(
                    name=city_name,
                    is_active=True,
                    timezone=tz
                )
                session.add(city)
                await session.flush()
                created_cities += 1
                print(f"Created city: {city_name} (tz: {tz})")
            else:
                print(f"City exists: {city_name}")
            
            # Добавляем районы
            for district_name in district_names:
                result = await session.execute(
                    select(districts).where(
                        districts.city_id == city.id,
                        districts.name == district_name
                    )
                )
                existing_district = result.scalar_one_or_none()
                
                if not existing_district:
                    district = districts(
                        city_id=city.id,
                        name=district_name
                    )
                    session.add(district)
                    created_districts += 1
        
        await session.commit()
        print(f"\nDONE! Cities: {created_cities}, Districts: {created_districts}")


if __name__ == "__main__":
    print("=" * 60)
    print("Fix encoding and seed DB")
    print("=" * 60)
    
    # 1. Исправляем кодировку
    print("\n1. Fixing onboarding.py encoding...")
    if fix_encoding():
        print("OK: Encoding fixed")
    else:
        print("FAIL: Could not fix encoding")
        sys.exit(1)
    
    # 2. Заполняем БД
    print("\n2. Seeding cities and districts...")
    try:
        asyncio.run(seed_cities_and_districts())
        print("OK: DB seeded")
    except Exception as e:
        print(f"FAIL: Error seeding DB: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
    
    print("\n" + "=" * 60)
    print("SUCCESS! All operations completed")
    print("=" * 60)
