"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã commission_deadline_notifications
"""
import asyncio
import asyncpg


async def check_table():
    conn = await asyncpg.connect(
        host="localhost",
        port=5432,
        user="field_user",
        password="field_pass",
        database="field_service"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    exists = await conn.fetchval("""
        SELECT EXISTS (
            SELECT FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_name = 'commission_deadline_notifications'
        );
    """)
    
    print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ commission_deadline_notifications —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {exists}")
    
    if exists:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        columns = await conn.fetch("""
            SELECT column_name, data_type, is_nullable, column_default
            FROM information_schema.columns
            WHERE table_name = 'commission_deadline_notifications'
            ORDER BY ordinal_position;
        """)
        
        print("\nüìã –ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã:")
        for col in columns:
            print(f"  - {col['column_name']}: {col['data_type']} " +
                  f"(nullable={col['is_nullable']}, default={col['column_default']})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
        indexes = await conn.fetch("""
            SELECT indexname, indexdef
            FROM pg_indexes
            WHERE tablename = 'commission_deadline_notifications';
        """)
        
        print("\nüîç –ò–Ω–¥–µ–∫—Å—ã:")
        for idx in indexes:
            print(f"  - {idx['indexname']}")
            print(f"    {idx['indexdef']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º constraint'—ã
        constraints = await conn.fetch("""
            SELECT con.conname, pg_get_constraintdef(con.oid) as definition
            FROM pg_constraint con
            INNER JOIN pg_class rel ON rel.oid = con.conrelid
            WHERE rel.relname = 'commission_deadline_notifications';
        """)
        
        print("\nüîí Constraints:")
        for cons in constraints:
            print(f"  - {cons['conname']}")
            print(f"    {cons['definition']}")
    
    await conn.close()


if __name__ == "__main__":
    asyncio.run(check_table())
