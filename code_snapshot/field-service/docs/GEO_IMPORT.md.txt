# Регламент загрузки справочников географии

Эта процедура закрепляет требования ТЗ v1.2 и дополняет сиды Alembic.

## Сиды
- `2025_09_17_0003_seed_cities.py` — фиксированный перечень из 78 городов (список v1.2). Запускается сразу после базовой схемы и гарантирует наличие городов в БД.
- `2025_09_17_0003_seed_demo_data.py` — примерные районы и улицы для Москвы, Санкт‑Петербурга и Новосибирска, чтобы UI имел валидные справочники после развёртывания.
- `2025_10_01_0002_cities_timezone.py` — присваивает каждому городу IANA таймзону. Значения синхронизированы со списком из ТЗ: Москва/СПб → `Europe/Moscow`, Новосибирск → `Asia/Novosibirsk`, Владивосток → `Asia/Vladivostok` и т.д.

## Импорт CSV через RapidFuzz
Для пополнения справочников за рамками демо‑данных используется `tools/load_geo_catalog.py`.

```
python -m tools.load_geo_catalog --input data/geo_catalog.csv [--dry-run]
```

Файл CSV должен содержать колонки:
- `type` — `city`, `district` или `street`;
- `city` — обязателен для районов и улиц;
- `district` — обязателен для улиц;
- `name` — название справочника;
- `centroid_lat`, `centroid_lon` — опционально (зарезервировано под будущее расширение).

Алгоритм проверяет кандидатов RapidFuzz’ом (WRatio):
- score ≥ **93** — запись считается дублем и автоматически пропускается;
- 85 ≤ score < 93 — запись попадает в отчёт как «questionable», импорт не выполняется, требуется ручная проверка;
- score < 85 — запись добавляется в таблицу.

Скрипт выводит сводку: сколько городов, районов и улиц добавлено, сколько пропущено как дубли, какие элементы требуют проверки. Ключевые ограничения БД (уникальность пары `city_id/name` и `city_id/district_id/name`) дополнительно страхуют от повторов.

## Контроль качества
1. После импорта выполнить `SELECT` для города/района/улицы и убедиться, что запись появилась с ожидаемым `city_id`/`district_id`.
2. Проверить UI: поиск города, пагинация районов (по 5 на страницу) и fuzzy‑поиск улиц должны работать.
3. При обновлении списка городов/таймзон — синхронизировать `CITY_TIMEZONES` и перечень в `seed_cities` (при необходимости добавить новую Alembic‑миграцию).

## Резюме
- Сиды обеспечивают базовый набор данных, достаточный для онбординга и QA.
- `tools/load_geo_catalog.py` позволяет безопасно загружать новые записи без дублей, соответствуя правилам ТЗ v1.2.
- Все справочники остаются детерминированными и проверяемыми: список городов фиксирован, а новые адресные объекты проходят fuzzy‑валидацию перед вставкой.
