# üìä –ú–µ—Ç—Ä–∏–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ (STEP 4.1)

## –û–±–∑–æ—Ä

–°–∏—Å—Ç–µ–º–∞ –º–µ—Ç—Ä–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–æ–±–∏—Ä–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–æ–≤ –Ω–∞ –∑–∞–∫–∞–∑—ã –¥–ª—è:
- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
- –í—ã—è–≤–ª–µ–Ω–∏—è —É–∑–∫–∏—Ö –º–µ—Å—Ç
- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤
- –ê–Ω–∞–ª–∏–∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ –≥–æ—Ä–æ–¥–æ–≤

## –¢–∞–±–ª–∏—Ü–∞ `distribution_metrics`

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞

```sql
CREATE TABLE distribution_metrics (
    id SERIAL PRIMARY KEY,
    order_id INTEGER NOT NULL REFERENCES orders(id) ON DELETE CASCADE,
    master_id INTEGER REFERENCES masters(id) ON DELETE SET NULL,
    
    -- –ú–µ—Ç—Ä–∏–∫–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    assigned_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    round_number SMALLINT NOT NULL,
    candidates_count SMALLINT NOT NULL,
    time_to_assign_seconds INTEGER,
    
    -- –§–ª–∞–≥–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
    preferred_master_used BOOLEAN NOT NULL DEFAULT FALSE,
    was_escalated_to_logist BOOLEAN NOT NULL DEFAULT FALSE,
    was_escalated_to_admin BOOLEAN NOT NULL DEFAULT FALSE,
    
    -- –ì–µ–æ–≥—Ä–∞—Ñ–∏—è
    city_id INTEGER NOT NULL REFERENCES cities(id) ON DELETE CASCADE,
    district_id INTEGER REFERENCES districts(id) ON DELETE SET NULL,
    category ordercategory,
    order_type VARCHAR(32),
    
    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    metadata_json JSONB NOT NULL DEFAULT '{}'::jsonb,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);
```

### –ò–Ω–¥–µ–∫—Å—ã

- `ix_distribution_metrics_order_id` - –±—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –ø–æ –∑–∞–∫–∞–∑—É
- `ix_distribution_metrics_master_id` - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–∞—Å—Ç–µ—Ä—É
- `ix_distribution_metrics_assigned_at` - –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–∑—ã
- `ix_distribution_metrics__city_assigned` - –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –≥–æ—Ä–æ–¥–∞–º
- `ix_distribution_metrics__performance` - –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

## –ö–æ–≥–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –º–µ—Ç—Ä–∏–∫–∏

### 1. –ü—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –æ—Ñ—Ñ–µ—Ä–∞ –º–∞—Å—Ç–µ—Ä–æ–º

**–§–∞–π–ª:** `field_service/bots/master_bot/handlers/orders.py`  
**–§—É–Ω–∫—Ü–∏—è:** `offer_accept()`

–ú–µ—Ç—Ä–∏–∫–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–∞ –º–∞—Å—Ç–µ—Ä–∞:

```python
metrics = m.distribution_metrics(
    order_id=order_id,
    master_id=master.id,
    round_number=max_round,
    candidates_count=total_candidates,
    time_to_assign_seconds=time_to_assign,
    preferred_master_used=(master.id == preferred_master_id),
    was_escalated_to_logist=escalated_logist,
    was_escalated_to_admin=escalated_admin,
    city_id=city_id,
    district_id=district_id,
    category=category,
    order_type=order_type,
    metadata_json={"assigned_via": "master_bot"}
)
```

### 2. –ü—Ä–∏ —Ä—É—á–Ω–æ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–æ–º

**–§–∞–π–ª:** `field_service/bots/admin_bot/services/orders.py`  
**–§—É–Ω–∫—Ü–∏—è:** `assign_master()`

–ú–µ—Ç—Ä–∏–∫–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –ø—Ä–∏ —Ä—É—á–Ω–æ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º:

```python
metadata_json={
    "assigned_via": "admin_manual",
    "staff_id": staff.id,
    "from_status": prev_status
}
```

## –°–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏

### –ö–ª–∞—Å—Å `DistributionMetricsService`

**–§–∞–π–ª:** `field_service/services/distribution_metrics_service.py`

#### –ú–µ—Ç–æ–¥—ã

##### `get_stats()`

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –ø–µ—Ä–∏–æ–¥:

```python
service = DistributionMetricsService()
stats = await service.get_stats(
    start_date=datetime.now() - timedelta(days=7),
    end_date=datetime.now(),
    city_id=1  # optional
)

print(f"–í—Å–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π: {stats.total_assignments}")
print(f"–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: {stats.avg_time_to_assign}—Å")
print(f"–°—Ä–µ–¥–Ω–∏–π —Ä–∞—É–Ω–¥: {stats.avg_round_number}")
print(f"% —ç—Å–∫–∞–ª–∞—Ü–∏–π –∫ –ª–æ–≥–∏—Å—Ç—É: {stats.escalated_to_logist_pct}%")
print(f"% –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π —Å —Ä–∞—É–Ω–¥–∞ 1: {stats.round_1_pct}%")
```

##### `get_city_performance()`

–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥–æ—Ä–æ–¥–∞–º:

```python
cities = await service.get_city_performance(
    start_date=datetime.now() - timedelta(days=7),
    limit=20
)

for city in cities:
    print(f"{city.city_name}: {city.total_assignments} –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π, "
          f"avg time: {city.avg_time_to_assign}—Å, "
          f"escalation rate: {city.escalation_rate}%")
```

##### `get_master_performance()`

–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–∞—Å—Ç–µ—Ä–∞–º:

```python
masters = await service.get_master_performance(
    start_date=datetime.now() - timedelta(days=30),
    master_id=100,  # optional
    limit=50
)

for master in masters:
    print(f"{master.master_name}: {master.total_assignments} –∑–∞–∫–∞–∑–æ–≤, "
          f"auto: {master.from_auto}, manual: {master.from_manual}, "
          f"preferred: {master.from_preferred}")
```

##### `get_hourly_distribution()`

–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —á–∞—Å–∞–º —Å—É—Ç–æ–∫:

```python
hourly = await service.get_hourly_distribution(
    start_date=datetime.now() - timedelta(days=7)
)

for hour, count in hourly.items():
    print(f"{hour:02d}:00 - {count} –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π")
```

## –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤

### –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –≥–æ—Ä–æ–¥–∞–º

```sql
SELECT 
    c.name AS city,
    COUNT(*) AS total_assignments,
    ROUND(AVG(dm.time_to_assign_seconds)) AS avg_seconds,
    ROUND(AVG(dm.time_to_assign_seconds) / 60.0, 1) AS avg_minutes
FROM distribution_metrics dm
JOIN cities c ON c.id = dm.city_id
WHERE dm.assigned_at >= NOW() - INTERVAL '7 days'
GROUP BY c.name
ORDER BY total_assignments DESC
LIMIT 20;
```

### –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–∞—É–Ω–¥–∞–º

```sql
SELECT 
    round_number,
    COUNT(*) AS count,
    ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) AS percentage
FROM distribution_metrics
WHERE assigned_at >= NOW() - INTERVAL '7 days'
GROUP BY round_number
ORDER BY round_number;
```

### –¢–æ–ø –º–∞—Å—Ç–µ—Ä–æ–≤ –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø—Ä–∏–Ω—è—Ç–∏—è

```sql
SELECT 
    m.full_name,
    COUNT(*) AS total_assignments,
    ROUND(AVG(dm.time_to_assign_seconds / 60.0), 1) AS avg_minutes,
    SUM(CASE WHEN dm.preferred_master_used THEN 1 ELSE 0 END) AS from_preferred
FROM distribution_metrics dm
JOIN masters m ON m.id = dm.master_id
WHERE dm.assigned_at >= NOW() - INTERVAL '30 days'
GROUP BY m.id, m.full_name
HAVING COUNT(*) >= 5
ORDER BY avg_minutes ASC
LIMIT 20;
```

### –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫

```sql
SELECT 
    EXTRACT(HOUR FROM assigned_at) AS hour,
    COUNT(*) AS assignments,
    ROUND(AVG(time_to_assign_seconds / 60.0), 1) AS avg_minutes,
    ROUND(SUM(CASE WHEN was_escalated_to_logist OR was_escalated_to_admin 
              THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS escalation_pct
FROM distribution_metrics
WHERE assigned_at >= NOW() - INTERVAL '7 days'
GROUP BY EXTRACT(HOUR FROM assigned_at)
ORDER BY hour;
```

## –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏

### 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ä–µ–≤–∏–∑–∏—é

```bash
cd C:\ProjectF\field-service
docker exec field-service-db psql -U postgres -d field_service -c "SELECT * FROM alembic_version;"
```

### 2. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é

```bash
# –í–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ
alembic upgrade head
```

–ò–ª–∏ —á–µ—Ä–µ–∑ Docker:

```bash
docker exec field-service-web alembic upgrade head
```

### 3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã

```bash
docker exec field-service-db psql -U postgres -d field_service -c "\d distribution_metrics"
```

## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

### –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫

```sql
SELECT COUNT(*) FROM distribution_metrics;
```

### –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏

```sql
SELECT 
    dm.id,
    dm.order_id,
    m.full_name AS master,
    dm.round_number,
    dm.time_to_assign_seconds,
    dm.assigned_at
FROM distribution_metrics dm
LEFT JOIN masters m ON m.id = dm.master_id
ORDER BY dm.assigned_at DESC
LIMIT 10;
```

### –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è

```sql
SELECT 
    COUNT(*) AS total,
    AVG(time_to_assign_seconds) AS avg_time,
    AVG(round_number) AS avg_round,
    SUM(CASE WHEN preferred_master_used THEN 1 ELSE 0 END) AS preferred_used,
    SUM(CASE WHEN was_escalated_to_logist THEN 1 ELSE 0 END) AS escalated_logist,
    SUM(CASE WHEN was_escalated_to_admin THEN 1 ELSE 0 END) AS escalated_admin
FROM distribution_metrics
WHERE assigned_at >= CURRENT_DATE;
```

## –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –∑–∞–º–µ—á–∞–Ω–∏—è

1. **–ù–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å**: –û—à–∏–±–∫–∏ –∑–∞–ø–∏—Å–∏ –º–µ—Ç—Ä–∏–∫ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
2. **Nullable –ø–æ–ª—è**: `time_to_assign_seconds` –º–æ–∂–µ—Ç –±—ã—Ç—å NULL –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å
3. **–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ**: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ `metadata_json` (—Å–ø–æ—Å–æ–± –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è, staff_id –∏ —Ç.–¥.)
4. **–ö–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ**: –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –º–µ—Ç—Ä–∏–∫–∏ —Ç–∞–∫–∂–µ —É–¥–∞–ª—è—é—Ç—Å—è (CASCADE)

## –î–∞–ª—å–Ω–µ–π—à–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ

- [ ] Dashboard –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ—Ç—Ä–∏–∫
- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∞–ª–µ—Ä—Ç—ã –ø—Ä–∏ –¥–µ–≥—Ä–∞–¥–∞—Ü–∏–∏ –º–µ—Ç—Ä–∏–∫
- [ ] –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏
- [ ] ML-–º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
- [ ] A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è

## –°–º. —Ç–∞–∫–∂–µ

- [–¢–µ—Å—Ç—ã –º–µ—Ç—Ä–∏–∫](../tests/test_distribution_metrics.py)
- [–°–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏](../field_service/services/distribution_metrics_service.py)
- [–ú–∏–≥—Ä–∞—Ü–∏—è](../alembic/versions/2025_10_06_0001_distribution_metrics.py)
