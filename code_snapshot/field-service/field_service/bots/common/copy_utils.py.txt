"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (P1-19).

–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç callback handlers –∏ helper —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
—Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤, –∞–¥—Ä–µ—Å–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º.

–ü–æ–¥—Ö–æ–¥: callback_data —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ ID –∑–∞–∫–∞–∑–∞ –∏ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö,
—Å–∞–º–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ –ë–î –≤ handler'–µ.
"""
from __future__ import annotations

from aiogram.types import InlineKeyboardButton


def copy_button(
    text: str, 
    order_id: int, 
    data_type: str,
    bot_prefix: str = "m"
) -> InlineKeyboardButton:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞.
    
    Args:
        text: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä "üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω")
        order_id: ID –∑–∞–∫–∞–∑–∞
        data_type: –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:
            - "cph" = client_phone
            - "addr" = address
            - "mph" = master_phone (–¥–ª—è admin)
        bot_prefix: –ü—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞ ("m" –¥–ª—è master, "adm" –¥–ª—è admin)
    
    Returns:
        InlineKeyboardButton —Å callback_data –≤–∏–¥–∞ "prefix:copy:type:order_id"
    
    Example:
        >>> copy_button("üìã –¢–µ–ª–µ—Ñ–æ–Ω", 123, "cph", "m")
        InlineKeyboardButton(text="üìã –¢–µ–ª–µ—Ñ–æ–Ω", callback_data="m:copy:cph:123")
    """
    callback_data = f"{bot_prefix}:copy:{data_type}:{order_id}"
    return InlineKeyboardButton(text=text, callback_data=callback_data)


def format_copy_message(data_type: str, data: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç <code> —Ç–µ–≥–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram.
    
    Args:
        data_type: –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö (cph, addr, mph)
        data: –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    
    Returns:
        HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    type_labels = {
        "cph": "üìû –¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞",
        "mph": "üìû –¢–µ–ª–µ—Ñ–æ–Ω –º–∞—Å—Ç–µ—Ä–∞",
        "addr": "üìç –ê–¥—Ä–µ—Å",
    }
    label = type_labels.get(data_type, "üìã –î–∞–Ω–Ω—ã–µ")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º <code> –¥–ª—è –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞ - –ª–µ–≥—á–µ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
    return f"<b>{label}:</b>\n\n<code>{data}</code>\n\n<i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</i>"
