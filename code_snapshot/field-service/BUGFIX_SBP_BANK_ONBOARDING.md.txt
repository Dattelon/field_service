# üîß BUGFIX: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –±–∞–Ω–∫–∞ –¥–ª—è –°–ë–ü –ø—Ä–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ

## üìã –ü—Ä–æ–±–ª–µ–º–∞

–ü—Ä–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ –º–∞—Å—Ç–µ—Ä–∞, –∫–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –°–ë–ü:
- ‚úÖ –°–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
- ‚ùå –ù–ï —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –±–∞–Ω–∫

**–¢–µ–∫—É—â–∏–π —Ñ–ª–æ—É**:
```
–í—ã–±—Ä–∞—Ç—å –°–ë–ü ‚Üí –í–≤–µ—Å—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω ‚Üí –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
```

**–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–ª–æ—É**:
```
–í—ã–±—Ä–∞—Ç—å –°–ë–ü ‚Üí –í–≤–µ—Å—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω ‚Üí –í—ã–±—Ä–∞—Ç—å –±–∞–Ω–∫ ‚Üí –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
```

## üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è

### 1. –î–æ–±–∞–≤–∏—Ç—å state –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–∞–Ω–∫–∞

**–§–∞–π–ª**: `field_service/bots/master_bot/states.py`

–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π state `payout_sbp_bank`:

```python
class OnboardingStates(StatesGroup):
    pdn = State()
    last_name = State()
    first_name = State()
    middle_name = State()
    phone = State()
    city = State()
    districts = State()
    vehicle = State()
    skills = State()
    passport = State()
    selfie = State()
    payout_method = State()
    payout_requisites = State()
    payout_sbp_bank = State()  # üîß –ù–û–í–´–ô STATE
    confirm = State()
```

### 2. –î–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –±–∞–Ω–∫–æ–≤ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

**–§–∞–π–ª**: `field_service/bots/master_bot/keyboards.py`

–î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ –±–∞–Ω–∫–∞:

```python
# –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±–∞–Ω–∫–æ–≤ –¥–ª—è –°–ë–ü
SBP_BANKS = [
    ("sber", "–°–±–µ—Ä–±–∞–Ω–∫"),
    ("tinkoff", "–¢–∏–Ω—å–∫–æ—Ñ—Ñ"),
    ("vtb", "–í–¢–ë"),
    ("alfa", "–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫"),
    ("raiff", "–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω–±–∞–Ω–∫"),
    ("gpb", "–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫"),
    ("mts", "–ú–¢–° –ë–∞–Ω–∫"),
    ("psb", "–ü–°–ë"),
    ("open", "–û—Ç–∫—Ä—ã—Ç–∏–µ"),
    ("sovcom", "–°–æ–≤–∫–æ–º–±–∞–Ω–∫"),
    ("rsb", "–†–æ—Å—Å–µ–ª—å—Ö–æ–∑–±–∞–Ω–∫"),
    ("ak_bars", "–ê–∫ –ë–∞—Ä—Å"),
    ("uralsib", "–£—Ä–∞–ª—Å–∏–±"),
    ("mkb", "–ú–ö–ë"),
    ("other", "–î—Ä—É–≥–æ–π –±–∞–Ω–∫"),
]

def sbp_bank_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –±–∞–Ω–∫–∞ –¥–ª—è –°–ë–ü."""
    kb = InlineKeyboardBuilder()
    for code, name in SBP_BANKS:
        kb.button(text=name, callback_data=f"m:onb:sbp_bank:{code}")
    kb.adjust(2)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    return kb.as_markup()
```

### 3. –ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞

**–§–∞–π–ª**: `field_service/bots/master_bot/handlers/onboarding.py`

#### 3.1. –û–±–Ω–æ–≤–∏—Ç—å STEP_MAPPING (–ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä):
```python
STEP_MAPPING = {
    OnboardingStates.pdn: 1,
    OnboardingStates.last_name: 2,
    OnboardingStates.first_name: 3,
    OnboardingStates.middle_name: 4,
    OnboardingStates.phone: 5,
    OnboardingStates.city: 6,
    OnboardingStates.districts: 7,
    OnboardingStates.vehicle: 8,
    OnboardingStates.skills: 9,
    OnboardingStates.passport: 10,
    OnboardingStates.selfie: 11,
    OnboardingStates.payout_method: 12,
    OnboardingStates.payout_requisites: 13,
    OnboardingStates.payout_sbp_bank: 14,  # üîß –ù–û–í–´–ô –®–ê–ì
}
TOTAL_ONBOARDING_STEPS = 14  # –ë—ã–ª–æ 13
```

#### 3.2. –ò–∑–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ `onboarding_payout_requisites`:

```python
@router.message(OnboardingStates.payout_requisites)
async def onboarding_payout_requisites(message: Message, state: FSMContext) -> None:
    data = await state.get_data()
    method_value = data.get("payout_method")
    if not method_value:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–ø–ª–∞—Ç—ã.")
        return
    
    # üîß –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –î–ª—è –°–ë–ü —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –±–∞–Ω–∫–∞
    if method_value == m.PayoutMethod.SBP.value:
        try:
            phone = onboarding_service.normalize_phone(message.text or "")
        except onboarding_service.ValidationError as exc:
            await message.answer(str(exc))
            return
        
        await state.update_data(sbp_phone=phone)
        await state.set_state(OnboardingStates.payout_sbp_bank)
        
        text = _add_progress_to_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –±–∞–Ω–∫ –¥–ª—è –°–ë–ü:", OnboardingStates.payout_sbp_bank)
        await push_step_message(
            message,
            state,
            text,
            sbp_bank_keyboard(),  # –ù–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        )
        return
    
    # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ - —Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞
    try:
        payout = onboarding_service.validate_payout(method_value, message.text or "")
    except onboarding_service.ValidationError as exc:
        await message.answer(str(exc))
        return
    
    await state.update_data(payout_method=payout.method.value, payout_payload=payout.payload)
    
    # P0-2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–ª–∞–≥–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if data.get("is_editing"):
        await state.update_data(is_editing=False)
        await _show_summary(message, state)
        return
    
    await _show_summary(message, state)
```

#### 3.3. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π handler –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–∞–Ω–∫–∞:

```python
@router.callback_query(OnboardingStates.payout_sbp_bank, F.data.startswith("m:onb:sbp_bank:"))
async def onboarding_sbp_bank_select(callback: CallbackQuery, state: FSMContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –±–∞–Ω–∫–∞ –¥–ª—è –°–ë–ü."""
    bank_code = callback.data.split(":")[-1]
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞
    bank_name = next(
        (name for code, name in SBP_BANKS if code == bank_code),
        bank_code
    )
    
    data = await state.get_data()
    sbp_phone = data.get("sbp_phone")
    
    if not sbp_phone:
        await callback.answer("–û—à–∏–±–∫–∞: —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.", show_alert=True)
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –°–ë–ü
    payload = {
        "sbp_phone": sbp_phone,
        "sbp_bank": bank_code,
        "sbp_bank_name": bank_name,
    }
    
    await state.update_data(
        payout_method=m.PayoutMethod.SBP.value,
        payout_payload=payload
    )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if data.get("is_editing"):
        await state.update_data(is_editing=False)
        await _show_summary(callback.message, state)
        await callback.answer(f"–ë–∞–Ω–∫ {bank_name} –≤—ã–±—Ä–∞–Ω")
        return
    
    await _show_summary(callback.message, state)
    await callback.answer(f"–ë–∞–Ω–∫ {bank_name} –≤—ã–±—Ä–∞–Ω")
```

#### 3.4. –û–±–Ω–æ–≤–∏—Ç—å `_format_payout_summary`:

```python
def _format_payout_summary(method_value: str | None, payload: dict | None) -> str:
    if not method_value:
        return ''
    try:
        method = m.PayoutMethod(method_value)
    except ValueError:
        return method_value
    payload = payload or {}
    
    if method is m.PayoutMethod.CARD:
        number = payload.get('card_number', '')
        digits = ''.join(ch for ch in number if ch.isdigit())
        last4 = digits[-4:] if digits else ''
        return f"–ö–∞—Ä—Ç–∞ *{last4}" if last4 else "–ö–∞—Ä—Ç–∞"
    
    if method is m.PayoutMethod.SBP:
        phone = payload.get('sbp_phone', '')
        bank_name = payload.get('sbp_bank_name', '')
        # üîß –û–ë–ù–û–í–õ–ï–ù–û: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏ —Ç–µ–ª–µ—Ñ–æ–Ω, –∏ –±–∞–Ω–∫
        if phone and bank_name:
            return f"–°–ë–ü {phone} ({bank_name})"
        elif phone:
            return f"–°–ë–ü {phone}"
        else:
            return "–°–ë–ü"
    
    if method is m.PayoutMethod.YOOMONEY:
        account = payload.get('account', '')
        return f"–ÆMoney {account}".strip() or "–ÆMoney"
    
    if method is m.PayoutMethod.BANK_ACCOUNT:
        account = payload.get('account_number', '')
        last4 = account[-4:] if account else ''
        return f"–ë–∞–Ω–∫ —Å—á—ë—Ç *{last4}" if last4 else "–ë–∞–Ω–∫ —Å—á—ë—Ç"
    
    return method.value
```

### 4. –û–±–Ω–æ–≤–∏—Ç—å onboarding_service (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)

**–§–∞–π–ª**: `field_service/services/onboarding_service.py`

–ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å, —Ç–∞–∫ –∫–∞–∫ payload —Ç–µ–ø–µ—Ä—å —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –≤ handlers. –ù–æ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é:

```python
elif method is m.PayoutMethod.SBP:
    # –¢–µ–ª–µ—Ñ–æ–Ω –∏ –±–∞–Ω–∫ —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—Ö–æ–¥—è—Ç –∏–∑ handlers
    # –≠—Ç–∞ –≤–µ—Ç–∫–∞ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –°–ë–ü
    payload["sbp_phone"] = normalize_phone(normalized)
```

---

## ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç

### –î–æ:
```
–í—ã–±—Ä–∞—Ç—å –°–ë–ü ‚Üí –í–≤–µ—Å—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω ‚Üí –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
–î–∞–Ω–Ω—ã–µ: {"sbp_phone": "+79123456789"}
```

### –ü–æ—Å–ª–µ:
```
–í—ã–±—Ä–∞—Ç—å –°–ë–ü ‚Üí –í–≤–µ—Å—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω ‚Üí –í—ã–±—Ä–∞—Ç—å –±–∞–Ω–∫ ‚Üí –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
–î–∞–Ω–Ω—ã–µ: {
    "sbp_phone": "+79123456789",
    "sbp_bank": "sber",
    "sbp_bank_name": "–°–±–µ—Ä–±–∞–Ω–∫"
}
```

### Summary (—Å–≤–æ–¥–∫–∞):
```
–°–ø–æ—Å–æ–± –≤—ã–ø–ª–∞—Ç—ã: –°–ë–ü +79123456789 (–°–±–µ—Ä–±–∞–Ω–∫)
```

---

## üìä –°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

1. `field_service/bots/master_bot/states.py` - –¥–æ–±–∞–≤–ª–µ–Ω state
2. `field_service/bots/master_bot/keyboards.py` - –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–∞–Ω–∫–æ–≤
3. `field_service/bots/master_bot/handlers/onboarding.py`:
   - –û–±–Ω–æ–≤–ª—ë–Ω STEP_MAPPING
   - –ò–∑–º–µ–Ω–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ `onboarding_payout_requisites`
   - –î–æ–±–∞–≤–ª–µ–Ω handler `onboarding_sbp_bank_select`
   - –û–±–Ω–æ–≤–ª—ë–Ω `_format_payout_summary`

---

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –º–∞—Å—Ç–µ—Ä–∞
2. –î–æ–π—Ç–∏ –¥–æ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –≤—ã–ø–ª–∞—Ç—ã
3. –í—ã–±—Ä–∞—Ç—å "–°–ë–ü"
4. –í–≤–µ—Å—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω: `+79123456789`
5. ‚úÖ –î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –±–∞–Ω–∫–æ–≤
6. –í—ã–±—Ä–∞—Ç—å –±–∞–Ω–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–°–±–µ—Ä–±–∞–Ω–∫")
7. ‚úÖ –í summary –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å: `–°–ë–ü +79123456789 (–°–±–µ—Ä–±–∞–Ω–∫)`
8. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
9. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –ë–î:
```sql
SELECT id, payout_method, payout_data 
FROM masters 
WHERE phone = '+79123456789';
```
–û–∂–∏–¥–∞–µ—Ç—Å—è:
```json
{
    "sbp_phone": "+79123456789",
    "sbp_bank": "sber",
    "sbp_bank_name": "–°–±–µ—Ä–±–∞–Ω–∫"
}
```

---

## üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è

- –°–ø–∏—Å–æ–∫ –±–∞–Ω–∫–æ–≤ –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å
- –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –±–∞–Ω–∫–∞
- –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ "–î—Ä—É–≥–æ–π –±–∞–Ω–∫" —Å –≤–≤–æ–¥–æ–º –≤—Ä—É—á–Ω—É—é
- –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω: —Ç–µ–ø–µ—Ä—å 14 —à–∞–≥–æ–≤ –≤–º–µ—Å—Ç–æ 13

–ü–∞—Ç—á –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é!
