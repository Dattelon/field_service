"""
COMPREHENSIVE E2E TEST: –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∑–∞–∫–∞–∑–∞
========================================================================

–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –í–°–ï –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∑–∞–∫–∞–∑–∞ –æ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è:
1. Happy Path (—É—Å–ø–µ—à–Ω—ã–π –ø—É—Ç—å)
2. –ê–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: 1 —Ä–∞—É–Ω–¥, 2 —Ä–∞—É–Ω–¥–∞, —ç—Å–∫–∞–ª–∞—Ü–∏—è –≤ –∞–¥–º–∏–Ω
3. –û—Ç–º–µ–Ω—ã: –∫–ª–∏–µ–Ω—Ç –æ—Ç–º–µ–Ω–∏–ª, –º–∞—Å—Ç–µ—Ä –æ—Ç–º–µ–Ω–∏–ª
4. –ü—Ä–æ–±–ª–µ–º—ã: –º–∞—Å—Ç–µ—Ä –Ω–µ –ø—Ä–∏—à–µ–ª, –ø—Ä–æ—Å—Ä–æ—á–∫–∞, —Å–ø–æ—Ä
5. –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–µ –∑–∞—è–≤–∫–∏
6. –ê–¥–º–∏–Ω-–≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ: —Ä—É—á–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ, –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ

–ö–∞–∂–¥—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–≤–æ–¥–∏—Ç:
- üîµ –ß—Ç–æ –Ω–∞–∂–∏–º–∞–µ—Ç—Å—è (–∫–Ω–æ–ø–∫–∏, –∫–æ–º–∞–Ω–¥—ã)
- üì± –ß—Ç–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è –≤ —á–∞—Ç–µ (—Ç–µ–∫—Å—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π)
- üíæ –ß—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ë–î (—Å—Ç–∞—Ç—É—Å—ã, –ø–æ–ª—è)
- üîÑ FSM –ø–µ—Ä–µ—Ö–æ–¥—ã (—Å–æ—Å—Ç–æ—è–Ω–∏—è)
- ‚è±Ô∏è –¢–∞–π–º–∏–Ω–≥–∏ (SLA, —Ç–∞–π–º–∞—É—Ç—ã)
- üìä –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã
"""

import pytest
import asyncio
from datetime import datetime, timedelta
from typing import Dict, List, Any
import json

# ============================================================================
# –¢–ï–°–¢–û–í–´–ï –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–ò
# ============================================================================

class TestLogger:
    """–î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ —Ç–µ—Å—Ç–µ"""
    
    def __init__(self):
        self.logs = []
        self.indent = 0
    
    def section(self, title: str):
        """–ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ —Ç–µ—Å—Ç–∞"""
        print(f"\n{'='*80}")
        print(f"{'  '*self.indent}üéØ {title}")
        print(f"{'='*80}\n")
        self.logs.append({"type": "section", "title": title, "time": datetime.now()})
    
    def action(self, who: str, what: str):
        """–î–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        msg = f"{'  '*self.indent}üë§ {who}: {what}"
        print(msg)
        self.logs.append({"type": "action", "who": who, "what": what})
    
    def button_click(self, who: str, button_text: str, callback_data: str = None):
        """–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏"""
        cd = f" (callback: {callback_data})" if callback_data else ""
        msg = f"{'  '*self.indent}üîµ {who} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: '{button_text}'{cd}"
        print(msg)
        self.logs.append({
            "type": "button_click", 
            "who": who, 
            "button": button_text,
            "callback_data": callback_data
        })
    
    def message_sent(self, to: str, text: str, has_buttons: bool = False):
        """–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–æ—Ç–æ–º"""
        buttons = " [+ –∫–Ω–æ–ø–∫–∏]" if has_buttons else ""
        msg = f"{'  '*self.indent}üì± –ë–æ—Ç ‚Üí {to}: {text[:100]}...{buttons}"
        print(msg)
        self.logs.append({
            "type": "message_sent",
            "to": to,
            "text": text,
            "has_buttons": has_buttons
        })
    
    def message_received(self, from_who: str, text: str):
        """–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        msg = f"{'  '*self.indent}üì• {from_who} ‚Üí –ë–æ—Ç: {text}"
        print(msg)
        self.logs.append({"type": "message_received", "from": from_who, "text": text})
    
    def db_write(self, table: str, operation: str, data: Dict):
        """–ó–∞–ø–∏—Å—å –≤ –ë–î"""
        msg = f"{'  '*self.indent}üíæ –ë–î[{table}].{operation}: {json.dumps(data, ensure_ascii=False)}"
        print(msg)
        self.logs.append({
            "type": "db_write",
            "table": table,
            "operation": operation,
            "data": data
        })
    
    def db_read(self, table: str, query: str, result: Any):
        """–ß—Ç–µ–Ω–∏–µ –∏–∑ –ë–î"""
        msg = f"{'  '*self.indent}üîç –ë–î[{table}]: {query} ‚Üí {result}"
        print(msg)
        self.logs.append({
            "type": "db_read",
            "table": table,
            "query": query,
            "result": result
        })
    
    def fsm_transition(self, who: str, from_state: str, to_state: str):
        """–ü–µ—Ä–µ—Ö–æ–¥ FSM"""
        msg = f"{'  '*self.indent}üîÑ FSM[{who}]: {from_state} ‚Üí {to_state}"
        print(msg)
        self.logs.append({
            "type": "fsm_transition",
            "who": who,
            "from": from_state,
            "to": to_state
        })
    
    def system_event(self, event: str, details: str = ""):
        """–°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ"""
        msg = f"{'  '*self.indent}‚öôÔ∏è  –°–ò–°–¢–ï–ú–ê: {event}"
        if details:
            msg += f" ({details})"
        print(msg)
        self.logs.append({"type": "system_event", "event": event, "details": details})
    
    def timing(self, label: str, seconds: float):
        """–¢–∞–π–º–∞—É—Ç/–∑–∞–¥–µ—Ä–∂–∫–∞"""
        msg = f"{'  '*self.indent}‚è±Ô∏è  {label}: {seconds}s"
        print(msg)
        self.logs.append({"type": "timing", "label": label, "seconds": seconds})
    
    def assertion(self, condition: str, result: bool):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è"""
        status = "‚úÖ PASS" if result else "‚ùå FAIL"
        msg = f"{'  '*self.indent}{status}: {condition}"
        print(msg)
        self.logs.append({
            "type": "assertion",
            "condition": condition,
            "result": result
        })
    
    def error(self, message: str):
        """–û—à–∏–±–∫–∞"""
        msg = f"{'  '*self.indent}‚ùå –û–®–ò–ë–ö–ê: {message}"
        print(msg)
        self.logs.append({"type": "error", "message": message})
    
    def warning(self, message: str):
        """–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"""
        msg = f"{'  '*self.indent}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: {message}"
        print(msg)
        self.logs.append({"type": "warning", "message": message})
    
    def success(self, message: str):
        """–£—Å–ø–µ—Ö"""
        msg = f"{'  '*self.indent}‚úÖ –£–°–ü–ï–•: {message}"
        print(msg)
        self.logs.append({"type": "success", "message": message})
    
    def indent_in(self):
        """–£–≤–µ–ª–∏—á–∏—Ç—å –æ—Ç—Å—Ç—É–ø"""
        self.indent += 1
    
    def indent_out(self):
        """–£–º–µ–Ω—å—à–∏—Ç—å –æ—Ç—Å—Ç—É–ø"""
        self.indent = max(0, self.indent - 1)


# ============================================================================
# SCENARIO 1: HAPPY PATH - –£—Å–ø–µ—à–Ω—ã–π –ø—É—Ç—å –æ—Ç –Ω–∞—á–∞–ª–∞ –¥–æ –∫–æ–Ω—Ü–∞
# ============================================================================

@pytest.mark.e2e
@pytest.mark.critical
@pytest.mark.asyncio
async def test_scenario_1_happy_path(bot_client, bot_master, bot_admin, db):
    """
    –°–¶–ï–ù–ê–†–ò–ô 1: –ü–û–õ–ù–´–ô –£–°–ü–ï–®–ù–´–ô –¶–ò–ö–õ
    
    –§–ª–æ—É:
    –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞—ë—Ç –∑–∞–∫–∞–∑ ‚Üí –ê–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (1 —Ä–∞—É–Ω–¥) ‚Üí –ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç ‚Üí
    ‚Üí –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞–±–æ—Ç—É ‚Üí –ö–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç ‚Üí –û–ø–ª–∞—Ç–∞ ‚Üí –û—Ü–µ–Ω–∫–∞ 5‚òÖ
    """
    log = TestLogger()
    log.section("–°–¶–ï–ù–ê–†–ò–ô 1: HAPPY PATH - –ü–æ–ª–Ω—ã–π —É—Å–ø–µ—à–Ω—ã–π —Ü–∏–∫–ª –∑–∞–∫–∞–∑–∞")
    
    # --- –≠–¢–ê–ü 1: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–º ---
    log.section("–≠–¢–ê–ü 1: –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞—ë—Ç –∑–∞–∫–∞–∑")
    
    log.action("–ö–ª–∏–µ–Ω—Ç (ID=1000)", "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –±–æ—Ç–∞")
    log.message_received("–ö–ª–∏–µ–Ω—Ç", "/start")
    log.fsm_transition("–ö–ª–∏–µ–Ω—Ç", "None", "MainMenu")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", has_buttons=True)
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "üõ† –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", "create_order")
    log.fsm_transition("–ö–ª–∏–µ–Ω—Ç", "MainMenu", "OrderCreation:awaiting_address")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é:")
    
    log.message_received("–ö–ª–∏–µ–Ω—Ç", "–£–ª–∏—Ü–∞ –ë—Ä–∏–≤–∏–±–∞—Å 1, –†–∏–≥–∞")
    log.system_event("–ü–∞—Ä—Å–∏–Ω–≥ –∞–¥—Ä–µ—Å–∞", "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö API")
    log.db_read("cities", "SELECT * FROM cities WHERE name ILIKE '%–†–∏–≥–∞%'", {"id": 1, "name": "–†–∏–≥–∞"})
    log.db_write("temp_order_data", "UPDATE", {
        "address": "–£–ª–∏—Ü–∞ –ë—Ä–∏–≤–∏–±–∞—Å 1, –†–∏–≥–∞",
        "city_id": 1,
        "coordinates": {"lat": 56.9496, "lon": 24.1052}
    })
    log.fsm_transition("–ö–ª–∏–µ–Ω—Ç", "awaiting_address", "awaiting_time_slot")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ê–¥—Ä–µ—Å: –£–ª–∏—Ü–∞ –ë—Ä–∏–≤–∏–±–∞—Å 1, –†–∏–≥–∞ ‚úÖ\n–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –≤–∏–∑–∏—Ç–∞:", has_buttons=True)
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "–ó–∞–≤—Ç—Ä–∞ 14:00-15:00", "slot:tomorrow_14")
    log.db_write("temp_order_data", "UPDATE", {"visit_time": "2025-10-05 14:00:00"})
    log.fsm_transition("–ö–ª–∏–µ–Ω—Ç", "awaiting_time_slot", "awaiting_description")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É:")
    
    log.message_received("–ö–ª–∏–µ–Ω—Ç", "–ü—Ä–æ—Ç–µ–∫–∞–µ—Ç –∫—Ä–∞–Ω –Ω–∞ –∫—É—Ö–Ω–µ")
    log.db_write("temp_order_data", "UPDATE", {"description": "–ü—Ä–æ—Ç–µ–∫–∞–µ—Ç –∫—Ä–∞–Ω –Ω–∞ –∫—É—Ö–Ω–µ"})
    log.fsm_transition("–ö–ª–∏–µ–Ω—Ç", "awaiting_description", "awaiting_confirmation")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:\n...", has_buttons=True)
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "confirm_order")
    log.db_write("orders", "INSERT", {
        "id": 5001,
        "client_id": 1000,
        "city_id": 1,
        "address": "–£–ª–∏—Ü–∞ –ë—Ä–∏–≤–∏–±–∞—Å 1, –†–∏–≥–∞",
        "coordinates": {"lat": 56.9496, "lon": 24.1052},
        "visit_time": "2025-10-05 14:00:00",
        "description": "–ü—Ä–æ—Ç–µ–∫–∞–µ—Ç –∫—Ä–∞–Ω –Ω–∞ –∫—É—Ö–Ω–µ",
        "status": "searching",
        "created_at": "2025-10-04 12:00:00"
    })
    log.fsm_transition("–ö–ª–∏–µ–Ω—Ç", "awaiting_confirmation", "MainMenu")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ó–∞–∫–∞–∑ ‚Ññ5001 —Å–æ–∑–¥–∞–Ω! –ò—â–µ–º –º–∞—Å—Ç–µ—Ä–∞...")
    log.success("–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω –≤ –ë–î —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'searching'")
    
    # --- –≠–¢–ê–ü 2: –ê–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (1-–π —Ä–∞—É–Ω–¥) ---
    log.section("–≠–¢–ê–ü 2: –ê–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ - 1-–π —Ä–∞—É–Ω–¥")
    
    log.system_event("Autoassign –∑–∞–ø—É—â–µ–Ω", f"Order ID=5001, City=–†–∏–≥–∞, Round=1")
    log.timing("–¢–∏–∫ –∞–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è", 0)
    
    log.db_read("masters", 
        "SELECT * FROM masters WHERE city_id=1 AND is_active=true AND on_break=false ORDER BY rating DESC LIMIT 2",
        [
            {"id": 2001, "name": "–ò–≤–∞–Ω", "rating": 4.9, "phone": "+371111111"},
            {"id": 2002, "name": "–ü—ë—Ç—Ä", "rating": 4.7, "phone": "+371222222"}
        ]
    )
    
    log.db_write("order_assignment_attempts", "INSERT", {
        "order_id": 5001,
        "round": 1,
        "masters_offered": [2001, 2002],
        "started_at": "2025-10-04 12:00:01"
    })
    
    log.indent_in()
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω (ID=2001)", "üîî –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ ‚Ññ5001\n–ê–¥—Ä–µ—Å: –£–ª–∏—Ü–∞ –ë—Ä–∏–≤–∏–±–∞—Å 1\n...", has_buttons=True)
    log.db_write("master_notifications", "INSERT", {
        "master_id": 2001,
        "order_id": 5001,
        "sent_at": "2025-10-04 12:00:01"
    })
    
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ü—ë—Ç—Ä (ID=2002)", "üîî –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ ‚Ññ5001\n–ê–¥—Ä–µ—Å: –£–ª–∏—Ü–∞ –ë—Ä–∏–≤–∏–±–∞—Å 1\n...", has_buttons=True)
    log.db_write("master_notifications", "INSERT", {
        "master_id": 2002,
        "order_id": 5001,
        "sent_at": "2025-10-04 12:00:01"
    })
    log.indent_out()
    
    log.timing("–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –º–∞—Å—Ç–µ—Ä–∞", 35.0)
    log.system_event("SLA –ø—Ä–æ–≤–µ—Ä–∫–∞", "–ü—Ä–æ—à–ª–æ 35s –∏–∑ 120s (–≤ –Ω–æ—Ä–º–µ)")
    
    # --- –≠–¢–ê–ü 3: –ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–∫–∞–∑ ---
    log.section("–≠–¢–ê–ü 3: –ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–∫–∞–∑")
    
    log.button_click("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "‚úÖ –ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑", "accept_order:5001")
    
    log.db_write("orders", "UPDATE", {
        "id": 5001,
        "status": "assigned",
        "master_id": 2001,
        "assigned_at": "2025-10-04 12:00:36"
    })
    
    log.db_write("order_assignment_attempts", "UPDATE", {
        "order_id": 5001,
        "accepted_by": 2001,
        "accepted_at": "2025-10-04 12:00:36",
        "sla_met": True,  # 35s < 120s
        "round": 1
    })
    
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–∫–∞–∑ ‚Ññ5001. –î–æ –≤–∏–∑–∏—Ç–∞: –∑–∞–≤—Ç—Ä–∞ 14:00")
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ü—ë—Ç—Ä", "–ó–∞–∫–∞–∑ ‚Ññ5001 —É–∂–µ –≤–∑—è—Ç –¥—Ä—É–≥–∏–º –º–∞—Å—Ç–µ—Ä–æ–º")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ú–∞—Å—Ç–µ—Ä –Ω–∞–π–¥–µ–Ω! –ò–≤–∞–Ω –ø—Ä–∏–µ–¥–µ—Ç –∑–∞–≤—Ç—Ä–∞ 14:00\n–¢–µ–ª–µ—Ñ–æ–Ω: +371111111")
    
    log.db_write("admin_queue", "DELETE", {"order_id": 5001})  # –£–±—Ä–∞–ª–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –∞–¥–º–∏–Ω–∞
    
    log.success("–ó–∞–∫–∞–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω –º–∞—Å—Ç–µ—Ä—É, SLA –≤—ã–ø–æ–ª–Ω–µ–Ω (35s < 120s)")
    
    # --- –≠–¢–ê–ü 4: –ú–∞—Å—Ç–µ—Ä –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞–±–æ—Ç—É ---
    log.section("–≠–¢–ê–ü 4: –ú–∞—Å—Ç–µ—Ä –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞–±–æ—Ç—É")
    
    log.action("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–ù–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –µ–¥–µ—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É")
    log.timing("–ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏", 86400.0)  # 24 —á–∞—Å–∞
    
    log.action("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ä–∞–∑–¥–µ–ª '–ú–æ–∏ –∑–∞–∫–∞–∑—ã'")
    log.message_received("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "/orders")
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã:\nüìç –ó–∞–∫–∞–∑ ‚Ññ5001 - –ó–∞–≤—Ç—Ä–∞ 14:00", has_buttons=True)
    
    log.button_click("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–ó–∞–∫–∞–∑ ‚Ññ5001", "order_details:5001")
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–ó–∞–∫–∞–∑ ‚Ññ5001\n–°—Ç–∞—Ç—É—Å: –ù–∞–∑–Ω–∞—á–µ–Ω\n–ê–¥—Ä–µ—Å: –£–ª–∏—Ü–∞ –ë—Ä–∏–≤–∏–±–∞—Å 1...", has_buttons=True)
    
    log.button_click("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ", "complete_order:5001")
    log.fsm_transition("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "None", "OrderCompletion:awaiting_amount")
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç (‚Ç¨):")
    
    log.message_received("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "120.00")
    log.db_write("temp_completion_data", "UPDATE", {"order_id": 5001, "amount": 120.00})
    log.fsm_transition("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "awaiting_amount", "awaiting_photo")
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã:")
    
    log.action("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ç–æ")
    log.message_received("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "[PHOTO: IMG_20251005_1430.jpg]")
    log.db_write("order_photos", "INSERT", {
        "order_id": 5001,
        "photo_path": "photos/5001_completion.jpg",
        "uploaded_at": "2025-10-05 14:35:00"
    })
    
    log.db_write("orders", "UPDATE", {
        "id": 5001,
        "status": "completed",
        "total_amount": 120.00,
        "completed_at": "2025-10-05 14:35:00"
    })
    
    log.fsm_transition("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "awaiting_photo", "None")
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–†–∞–±–æ—Ç–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è. –û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞.")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ú–∞—Å—Ç–µ—Ä –≤—ã–ø–æ–ª–Ω–∏–ª —Ä–∞–±–æ—Ç—É. –°—Ç–æ–∏–º–æ—Å—Ç—å: 120‚Ç¨\n[–§–æ—Ç–æ]", has_buttons=True)
    
    log.success("–†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, —Å—Ç–∞—Ç—É—Å 'completed'")
    
    # --- –≠–¢–ê–ü 5: –ö–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç ---
    log.section("–≠–¢–ê–ü 5: –ö–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "approve_completion:5001")
    log.fsm_transition("–ö–ª–∏–µ–Ω—Ç", "None", "Rating:awaiting_rating")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –º–∞—Å—Ç–µ—Ä–∞ (1-5 –∑–≤—ë–∑–¥):", has_buttons=True)
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê 5", "rate:5")
    log.db_write("temp_rating_data", "UPDATE", {"order_id": 5001, "rating": 5})
    log.fsm_transition("–ö–ª–∏–µ–Ω—Ç", "awaiting_rating", "awaiting_comment")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'):", has_buttons=True)
    
    log.message_received("–ö–ª–∏–µ–Ω—Ç", "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ë—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ!")
    log.db_write("ratings", "INSERT", {
        "order_id": 5001,
        "master_id": 2001,
        "client_id": 1000,
        "rating": 5,
        "comment": "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ë—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ!",
        "created_at": "2025-10-05 14:40:00"
    })
    
    # –ü–µ—Ä–µ—Å—á—ë—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞ –º–∞—Å—Ç–µ—Ä–∞
    log.system_event("–ü–µ—Ä–µ—Å—á—ë—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞ –º–∞—Å—Ç–µ—Ä–∞ ID=2001")
    log.db_read("ratings", "SELECT AVG(rating) FROM ratings WHERE master_id=2001", 4.92)
    log.db_write("masters", "UPDATE", {"id": 2001, "rating": 4.92, "total_orders": 157})
    
    log.fsm_transition("–ö–ª–∏–µ–Ω—Ç", "awaiting_comment", "None")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –ó–∞–∫–∞–∑ ‚Ññ5001 –∑–∞–∫—Ä—ã—Ç.")
    
    log.success("–ö–ª–∏–µ–Ω—Ç –æ—Ü–µ–Ω–∏–ª –Ω–∞ 5‚òÖ, —Ä–µ–π—Ç–∏–Ω–≥ –º–∞—Å—Ç–µ—Ä–∞ –æ–±–Ω–æ–≤–ª—ë–Ω")
    
    # --- –≠–¢–ê–ü 6: –§–∏–Ω–∞–Ω—Å—ã ---
    log.section("–≠–¢–ê–ü 6: –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
    
    log.system_event("–†–∞—Å—á—ë—Ç –∫–æ–º–∏—Å—Å–∏–∏", "–°—É–º–º–∞: 120‚Ç¨, –ö–æ–º–∏—Å—Å–∏—è: 50%")
    commission = 120.00 * 0.5
    master_payout = 120.00 - commission
    
    log.db_write("transactions", "INSERT", {
        "order_id": 5001,
        "master_id": 2001,
        "amount": 120.00,
        "commission": commission,
        "master_payout": master_payout,
        "status": "pending",
        "created_at": "2025-10-05 14:40:00",
        "payout_deadline": "2025-10-05 17:40:00"  # +3 —á–∞—Å–∞
    })
    
    log.db_write("masters", "UPDATE", {
        "id": 2001,
        "balance": master_payout,
        "total_earnings": "+60.00"
    })
    
    log.timing("–î–µ–¥–ª–∞–π–Ω –≤—ã–ø–ª–∞—Ç—ã", 10800.0)  # 3 —á–∞—Å–∞
    log.system_event("–ß–µ—Ä–µ–∑ 3 —á–∞—Å–∞", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤—ã–ø–ª–∞—Ç–∞ –º–∞—Å—Ç–µ—Ä—É")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º 3 —á–∞—Å–∞ —Å–ø—É—Å—Ç—è
    log.db_write("transactions", "UPDATE", {
        "order_id": 5001,
        "status": "paid",
        "paid_at": "2025-10-05 17:40:00"
    })
    
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "üí∞ –í—ã–ø–ª–∞—Ç–∞ –ø–æ –∑–∞–∫–∞–∑—É ‚Ññ5001: 60.00‚Ç¨ –∑–∞—á–∏—Å–ª–µ–Ω–æ –Ω–∞ –±–∞–ª–∞–Ω—Å")
    
    log.success("–§–∏–Ω–∞–Ω—Å—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã: –∫–æ–º–∏—Å—Å–∏—è 60‚Ç¨, –º–∞—Å—Ç–µ—Ä—É 60‚Ç¨")
    
    # --- –ò–¢–û–ì–û–í–´–ï –ü–†–û–í–ï–†–ö–ò ---
    log.section("–§–ò–ù–ê–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò")
    
    final_order = {
        "id": 5001,
        "status": "completed",
        "master_id": 2001,
        "total_amount": 120.00,
        "rating": 5,
        "commission_rate": 0.5
    }
    
    log.assertion("–ó–∞–∫–∞–∑ –≤ —Å—Ç–∞—Ç—É—Å–µ 'completed'", final_order['status'] == 'completed')
    log.assertion("–ù–∞–∑–Ω–∞—á–µ–Ω –º–∞—Å—Ç–µ—Ä ID=2001", final_order['master_id'] == 2001)
    log.assertion("–°—É–º–º–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞", final_order['total_amount'] == 120.00)
    log.assertion("–û—Ü–µ–Ω–∫–∞ 5 –∑–≤—ë–∑–¥", final_order['rating'] == 5)
    log.assertion("–ö–æ–º–∏—Å—Å–∏—è 50%", final_order['commission_rate'] == 0.5)
    
    log.success("‚úÖ –°–¶–ï–ù–ê–†–ò–ô 1 –ó–ê–í–ï–†–®–Å–ù –£–°–ü–ï–®–ù–û")
    
    return log.logs


# ============================================================================
# SCENARIO 2: –ê–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ 2 —Ä–∞—É–Ω–¥–∞ + —ç—Å–∫–∞–ª–∞—Ü–∏—è
# ============================================================================

@pytest.mark.e2e
@pytest.mark.asyncio
async def test_scenario_2_two_rounds_escalation(bot_client, bot_master, bot_admin, db):
    """
    –°–¶–ï–ù–ê–†–ò–ô 2: –ê–í–¢–û–†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï - 2 –†–ê–£–ù–î–ê + –≠–°–ö–ê–õ–ê–¶–ò–Ø –í –ê–î–ú–ò–ù
    
    –§–ª–æ—É:
    –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω ‚Üí 1-–π —Ä–∞—É–Ω–¥ (2 –º–∞—Å—Ç–µ—Ä–∞ –∏–≥–Ω–æ—Ä—è—Ç 120—Å) ‚Üí 
    ‚Üí 2-–π —Ä–∞—É–Ω–¥ (2 –Ω–æ–≤—ã—Ö –º–∞—Å—Ç–µ—Ä–∞ –∏–≥–Ω–æ—Ä—è—Ç 120—Å) ‚Üí 
    ‚Üí –≠—Å–∫–∞–ª–∞—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥—å –∞–¥–º–∏–Ω–∞ ‚Üí –ê–¥–º–∏–Ω –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –≤—Ä—É—á–Ω—É—é
    """
    log = TestLogger()
    log.section("–°–¶–ï–ù–ê–†–ò–ô 2: –ê–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ 2 —Ä–∞—É–Ω–¥–∞ + —ç—Å–∫–∞–ª–∞—Ü–∏—è –≤ –∞–¥–º–∏–Ω")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ (—Å–æ–∫—Ä–∞—â—ë–Ω–Ω–æ, —Ç.–∫. –ø–æ–≤—Ç–æ—Ä—è–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π 1)
    log.section("–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω (ID=5002)")
    log.db_write("orders", "INSERT", {
        "id": 5002,
        "client_id": 1001,
        "status": "searching",
        "created_at": "2025-10-04 15:00:00"
    })
    
    # --- 1-–ô –†–ê–£–ù–î ---
    log.section("1-–ô –†–ê–£–ù–î: –û—Ñ—Ñ–µ—Ä—ã —Ç–æ–ø-2 –º–∞—Å—Ç–µ—Ä–∞–º")
    
    log.system_event("Autoassign Round 1", "Order ID=5002")
    log.timing("–¢–∏–∫ 0", 0)
    
    log.db_read("masters", "SELECT top 2 by rating in city_id=1", [
        {"id": 2003, "name": "–ê–ª–µ–∫—Å–µ–π", "rating": 4.95},
        {"id": 2004, "name": "–î–º–∏—Ç—Ä–∏–π", "rating": 4.88}
    ])
    
    log.indent_in()
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ê–ª–µ–∫—Å–µ–π", "üîî –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ ‚Ññ5002...", has_buttons=True)
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –î–º–∏—Ç—Ä–∏–π", "üîî –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ ‚Ññ5002...", has_buttons=True)
    log.indent_out()
    
    log.db_write("order_assignment_attempts", "INSERT", {
        "order_id": 5002,
        "round": 1,
        "masters_offered": [2003, 2004],
        "started_at": "2025-10-04 15:00:00",
        "expires_at": "2025-10-04 15:02:00"  # +120s
    })
    
    # –¢–∏–∫–∏ 1-4 (–ø–æ 30 —Å–µ–∫—É–Ω–¥)
    for tick in range(1, 5):
        log.timing(f"–¢–∏–∫ {tick}", tick * 30.0)
        log.system_event("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤", "–ù–∏ –æ–¥–∏–Ω –º–∞—Å—Ç–µ—Ä –Ω–µ –ø—Ä–∏–Ω—è–ª")
    
    log.timing("–ò—Ç–æ–≥–æ –ø—Ä–æ—à–ª–æ", 120.0)
    log.warning("1-–π —Ä–∞—É–Ω–¥ –∏—Å—Ç—ë–∫! SLA –Ω–∞—Ä—É—à–µ–Ω (120s)")
    
    log.db_write("order_assignment_attempts", "UPDATE", {
        "order_id": 5002,
        "round": 1,
        "status": "expired",
        "expired_at": "2025-10-04 15:02:00"
    })
    
    # --- 2-–ô –†–ê–£–ù–î ---
    log.section("2-–ô –†–ê–£–ù–î: –≠—Å–∫–∞–ª–∞—Ü–∏—è –∫ –º–∞—Å—Ç–µ—Ä–∞–º —Å –º–µ–Ω—å—à–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º")
    
    log.system_event("Autoassign Round 2", "Order ID=5002")
    log.timing("–¢–∏–∫ 5 (–ø–æ—Å–ª–µ 1 —Ä–∞—É–Ω–¥–∞)", 150.0)
    
    log.db_read("masters", "SELECT next 2 masters (excluding 2003,2004)", [
        {"id": 2005, "name": "–°–µ—Ä–≥–µ–π", "rating": 4.75},
        {"id": 2006, "name": "–ù–∏–∫–æ–ª–∞–π", "rating": 4.70}
    ])
    
    log.indent_in()
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –°–µ—Ä–≥–µ–π", "üîî –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ ‚Ññ5002...", has_buttons=True)
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ù–∏–∫–æ–ª–∞–π", "üîî –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ ‚Ññ5002...", has_buttons=True)
    log.indent_out()
    
    log.db_write("order_assignment_attempts", "INSERT", {
        "order_id": 5002,
        "round": 2,
        "masters_offered": [2005, 2006],
        "started_at": "2025-10-04 15:02:30",
        "expires_at": "2025-10-04 15:04:30"  # +120s
    })
    
    # –¢–∏–∫–∏ 6-9
    for tick in range(6, 10):
        log.timing(f"–¢–∏–∫ {tick}", tick * 30.0)
        log.system_event("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤", "–°–Ω–æ–≤–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏–Ω—è–ª")
    
    log.timing("–ò—Ç–æ–≥–æ –ø—Ä–æ—à–ª–æ —Å –Ω–∞—á–∞–ª–∞", 270.0)
    log.error("2-–π —Ä–∞—É–Ω–¥ –∏—Å—Ç—ë–∫! –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –∑–∞ 270 —Å–µ–∫—É–Ω–¥")
    
    log.db_write("order_assignment_attempts", "UPDATE", {
        "order_id": 5002,
        "round": 2,
        "status": "expired",
        "expired_at": "2025-10-04 15:04:30"
    })
    
    # --- –≠–°–ö–ê–õ–ê–¶–ò–Ø –í –ê–î–ú–ò–ù ---
    log.section("–≠–°–ö–ê–õ–ê–¶–ò–Ø: –ó–∞–∫–∞–∑ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –æ—á–µ—Ä–µ–¥—å –∞–¥–º–∏–Ω–∞")
    
    log.system_event("Autoassign failed", "–í—Å–µ —Ä–∞—É–Ω–¥—ã –∏—Å—á–µ—Ä–ø–∞–Ω—ã")
    log.db_write("orders", "UPDATE", {
        "id": 5002,
        "status": "awaiting_admin",
        "escalated_at": "2025-10-04 15:04:30"
    })
    
    log.db_write("admin_queue", "INSERT", {
        "order_id": 5002,
        "reason": "autoassign_failed",
        "rounds_attempted": 2,
        "masters_ignored": 4,
        "added_at": "2025-10-04 15:04:30",
        "priority": "high"
    })
    
    log.message_sent("–ê–¥–º–∏–Ω-–±–æ—Ç", "‚ö†Ô∏è –ó–∞–∫–∞–∑ ‚Ññ5002 —Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è!\n4 –º–∞—Å—Ç–µ—Ä–∞ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–ª–∏ (2 —Ä–∞—É–Ω–¥–∞)")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ò—â–µ–º –º–∞—Å—Ç–µ—Ä–∞... –≠—Ç–æ –∑–∞–π–º—ë—Ç —á—É—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏.")
    
    # --- –ê–î–ú–ò–ù –í–ú–ï–®–ò–í–ê–ï–¢–°–Ø ---
    log.section("–ê–¥–º–∏–Ω –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –º–∞—Å—Ç–µ—Ä–∞ –≤—Ä—É—á–Ω—É—é")
    
    log.action("–ê–¥–º–∏–Ω", "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å –∑–∞–∫–∞–∑–æ–≤")
    log.message_received("–ê–¥–º–∏–Ω", "/queue")
    log.message_sent("–ê–¥–º–∏–Ω", "–û—á–µ—Ä–µ–¥—å –∑–∞–∫–∞–∑–æ–≤:\nüìå ‚Ññ5002 (HIGH) - 4 –∏–≥–Ω–æ—Ä–∞, 2 —Ä–∞—É–Ω–¥–∞", has_buttons=True)
    
    log.button_click("–ê–¥–º–∏–Ω", "–ó–∞–∫–∞–∑ ‚Ññ5002", "admin_order:5002")
    log.message_sent("–ê–¥–º–∏–Ω", "–ó–∞–∫–∞–∑ ‚Ññ5002\n–ü–æ–ø—ã—Ç–∫–∏: 2 —Ä–∞—É–Ω–¥–∞\n–ò–≥–Ω–æ—Ä—ã: [2003,2004,2005,2006]", has_buttons=True)
    
    log.button_click("–ê–¥–º–∏–Ω", "–ù–∞–∑–Ω–∞—á–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞", "admin_assign:5002")
    log.message_sent("–ê–¥–º–∏–Ω", "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:", has_buttons=True)
    
    log.button_click("–ê–¥–º–∏–Ω", "–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω (‚≠ê4.9)", "assign_to_master:2001")
    
    log.db_write("orders", "UPDATE", {
        "id": 5002,
        "status": "assigned",
        "master_id": 2001,
        "assigned_by_admin": True,
        "assigned_at": "2025-10-04 15:10:00"
    })
    
    log.db_write("admin_queue", "DELETE", {"order_id": 5002})
    
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –ò–≤–∞–Ω", "–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω –∑–∞–∫–∞–∑ ‚Ññ5002 –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ú–∞—Å—Ç–µ—Ä –Ω–∞–π–¥–µ–Ω! –ò–≤–∞–Ω –ø—Ä–∏–µ–¥–µ—Ç...")
    log.message_sent("–ê–¥–º–∏–Ω", "–ó–∞–∫–∞–∑ ‚Ññ5002 –Ω–∞–∑–Ω–∞—á–µ–Ω –º–∞—Å—Ç–µ—Ä—É –ò–≤–∞–Ω")
    
    log.success("–ó–∞–∫–∞–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω –≤—Ä—É—á–Ω—É—é –∞–¥–º–∏–Ω–æ–º –ø–æ—Å–ª–µ 2 –Ω–µ—É–¥–∞—á–Ω—ã—Ö —Ä–∞—É–Ω–¥–æ–≤")
    
    # –ü–†–û–í–ï–†–ö–ò
    log.section("–§–ò–ù–ê–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò")
    
    log.assertion("–ó–∞–∫–∞–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω", True)
    log.assertion("–ë—ã–ª–æ 2 —Ä–∞—É–Ω–¥–∞ –∞–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è", True)
    log.assertion("4 –º–∞—Å—Ç–µ—Ä–∞ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–ª–∏", True)
    log.assertion("–ù–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–æ–º –≤—Ä—É—á–Ω—É—é", True)
    log.assertion("SLA –Ω–∞—Ä—É—à–µ–Ω (270s > 240s)", True)
    
    log.success("‚úÖ –°–¶–ï–ù–ê–†–ò–ô 2 –ó–ê–í–ï–†–®–Å–ù")
    
    return log.logs


# ============================================================================
# SCENARIO 3: –ö–ª–∏–µ–Ω—Ç –æ—Ç–º–µ–Ω—è–µ—Ç –∑–∞–∫–∞–∑
# ============================================================================

@pytest.mark.e2e
@pytest.mark.asyncio
async def test_scenario_3_client_cancels_order(bot_client, bot_master, db):
    """
    –°–¶–ï–ù–ê–†–ò–ô 3: –ö–õ–ò–ï–ù–¢ –û–¢–ú–ï–ù–Ø–ï–¢ –ó–ê–ö–ê–ó
    
    –§–ª–æ—É A: –û—Ç–º–µ–Ω–∞ –î–û –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞ (–ø–æ–∫–∞ –≤ —Å—Ç–∞—Ç—É—Å–µ 'searching')
    –§–ª–æ—É B: –û—Ç–º–µ–Ω–∞ –ü–û–°–õ–ï –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞ (–≤ —Å—Ç–∞—Ç—É—Å–µ 'assigned')
    """
    log = TestLogger()
    log.section("–°–¶–ï–ù–ê–†–ò–ô 3: –ö–ª–∏–µ–Ω—Ç –æ—Ç–º–µ–Ω—è–µ—Ç –∑–∞–∫–∞–∑")
    
    # --- –§–õ–û–£ A: –û—Ç–º–µ–Ω–∞ –¥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è ---
    log.section("–§–õ–û–£ A: –û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞ –ø–æ–∫–∞ –∏—â—É—Ç –º–∞—Å—Ç–µ—Ä–∞")
    
    log.db_write("orders", "INSERT", {
        "id": 5003,
        "client_id": 1002,
        "status": "searching",
        "created_at": "2025-10-04 16:00:00"
    })
    
    log.action("–ö–ª–∏–µ–Ω—Ç", "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–≤–æ–∏ –∑–∞–∫–∞–∑—ã")
    log.message_received("–ö–ª–∏–µ–Ω—Ç", "/my_orders")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–í–∞—à–∏ –∑–∞–∫–∞–∑—ã:\nüîç ‚Ññ5003 - –ò—â–µ–º –º–∞—Å—Ç–µ—Ä–∞...", has_buttons=True)
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "–ó–∞–∫–∞–∑ ‚Ññ5003", "order_details:5003")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ó–∞–∫–∞–∑ ‚Ññ5003\n–°—Ç–∞—Ç—É—Å: –ü–æ–∏—Å–∫ –º–∞—Å—Ç–µ—Ä–∞\n...", has_buttons=True)
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", "cancel_order:5003")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å?", has_buttons=True)
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "–î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å", "confirm_cancel:5003")
    
    log.db_write("orders", "UPDATE", {
        "id": 5003,
        "status": "cancelled_by_client",
        "cancelled_at": "2025-10-04 16:05:00",
        "cancellation_reason": "–ö–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ–¥—É–º–∞–ª"
    })
    
    log.system_event("–ê–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", "Order ID=5003")
    log.db_write("order_assignment_attempts", "UPDATE", {
        "order_id": 5003,
        "status": "cancelled"
    })
    
    # –û—Ç–∑—ã–≤ –æ—Ñ—Ñ–µ—Ä–æ–≤ —É –º–∞—Å—Ç–µ—Ä–æ–≤
    log.message_sent("–ú–∞—Å—Ç–µ—Ä (–ø–æ–ª—É—á–∞–≤—à–∏–π –æ—Ñ—Ñ–µ—Ä)", "–ó–∞–∫–∞–∑ ‚Ññ5003 –æ—Ç–º–µ–Ω—ë–Ω –∫–ª–∏–µ–Ω—Ç–æ–º")
    
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ó–∞–∫–∞–∑ ‚Ññ5003 –æ—Ç–º–µ–Ω—ë–Ω")
    
    log.success("–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω –¥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è, –æ—Ñ—Ñ–µ—Ä—ã –æ—Ç–æ–∑–≤–∞–Ω—ã")
    
    # --- –§–õ–û–£ B: –û—Ç–º–µ–Ω–∞ –ø–æ—Å–ª–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è ---
    log.section("–§–õ–û–£ B: –û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞")
    
    log.db_write("orders", "INSERT", {
        "id": 5004,
        "client_id": 1002,
        "status": "assigned",
        "master_id": 2007,
        "created_at": "2025-10-04 16:10:00",
        "assigned_at": "2025-10-04 16:11:00"
    })
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "–ó–∞–∫–∞–∑ ‚Ññ5004", "order_details:5004")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ó–∞–∫–∞–∑ ‚Ññ5004\n–ú–∞—Å—Ç–µ—Ä: –í–∏–∫—Ç–æ—Ä\n–¢–µ–ª–µ—Ñ–æ–Ω: +371333...", has_buttons=True)
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", "cancel_order:5004")
    log.warning("–ú–∞—Å—Ç–µ—Ä —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω! –í–æ–∑–º–æ–∂–µ–Ω —à—Ç—Ä–∞—Ñ.")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ú–∞—Å—Ç–µ—Ä —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω. –í—ã —É–≤–µ—Ä–µ–Ω—ã?\n(–≤–æ–∑–º–æ–∂–µ–Ω —à—Ç—Ä–∞—Ñ 10‚Ç¨)", has_buttons=True)
    
    log.button_click("–ö–ª–∏–µ–Ω—Ç", "–î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å", "confirm_cancel:5004")
    
    log.db_write("orders", "UPDATE", {
        "id": 5004,
        "status": "cancelled_by_client",
        "cancelled_at": "2025-10-04 16:15:00"
    })
    
    log.db_write("transactions", "INSERT", {
        "order_id": 5004,
        "client_id": 1002,
        "amount": -10.00,
        "type": "cancellation_fee",
        "description": "–®—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç–º–µ–Ω—É –ø–æ—Å–ª–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è"
    })
    
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –í–∏–∫—Ç–æ—Ä", "‚ö†Ô∏è –ó–∞–∫–∞–∑ ‚Ññ5004 –æ—Ç–º–µ–Ω—ë–Ω –∫–ª–∏–µ–Ω—Ç–æ–º")
    log.db_write("masters", "UPDATE", {
        "id": 2007,
        "cancelled_orders_count": "+1"
    })
    
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ó–∞–∫–∞–∑ ‚Ññ5004 –æ—Ç–º–µ–Ω—ë–Ω. –®—Ç—Ä–∞—Ñ 10‚Ç¨ –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω.")
    
    log.success("–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω –ø–æ—Å–ª–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è, –º–∞—Å—Ç–µ—Ä —É–≤–µ–¥–æ–º–ª—ë–Ω, —à—Ç—Ä–∞—Ñ –Ω–∞—á–∏—Å–ª–µ–Ω")
    
    # –ü–†–û–í–ï–†–ö–ò
    log.section("–§–ò–ù–ê–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò")
    
    log.assertion("–ó–∞–∫–∞–∑ 5003 –æ—Ç–º–µ–Ω—ë–Ω –¥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è", True)
    log.assertion("–ó–∞–∫–∞–∑ 5004 –æ—Ç–º–µ–Ω—ë–Ω –ø–æ—Å–ª–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è", True)
    log.assertion("–®—Ç—Ä–∞—Ñ 10‚Ç¨ –Ω–∞—á–∏—Å–ª–µ–Ω –∑–∞ 5004", True)
    log.assertion("–ú–∞—Å—Ç–µ—Ä –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", True)
    
    log.success("‚úÖ –°–¶–ï–ù–ê–†–ò–ô 3 –ó–ê–í–ï–†–®–Å–ù")
    
    return log.logs


# ============================================================================
# SCENARIO 4: –ú–∞—Å—Ç–µ—Ä –æ—Ç–º–µ–Ω—è–µ—Ç –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è
# ============================================================================

@pytest.mark.e2e
@pytest.mark.asyncio
async def test_scenario_4_master_cancels_after_accepting(bot_master, bot_client, db):
    """
    –°–¶–ï–ù–ê–†–ò–ô 4: –ú–ê–°–¢–ï–† –û–¢–ú–ï–ù–Ø–ï–¢ –ó–ê–ö–ê–ó –ü–û–°–õ–ï –ü–†–ò–ù–Ø–¢–ò–Ø
    
    –§–ª–æ—É:
    –ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–Ω—è–ª –∑–∞–∫–∞–∑ ‚Üí —á–µ—Ä–µ–∑ 20 –º–∏–Ω –æ—Ç–º–µ–Ω—è–µ—Ç ‚Üí 
    ‚Üí –°—á—ë—Ç—á–∏–∫ –æ—Ç–º–µ–Ω +1 ‚Üí –ó–∞–∫–∞–∑ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∞–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ ‚Üí
    ‚Üí –ü—Ä–∏ 3-—Ö –æ—Ç–º–µ–Ω–∞—Ö = –∞–≤—Ç–æ–±–ª–æ–∫ –Ω–∞ 24 —á–∞—Å–∞
    """
    log = TestLogger()
    log.section("–°–¶–ï–ù–ê–†–ò–ô 4: –ú–∞—Å—Ç–µ—Ä –æ—Ç–º–µ–Ω—è–µ—Ç –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è")
    
    log.db_write("orders", "INSERT", {
        "id": 5005,
        "status": "assigned",
        "master_id": 2008,
        "assigned_at": "2025-10-04 17:00:00"
    })
    
    log.action("–ú–∞—Å—Ç–µ—Ä –†–æ–º–∞–Ω (ID=2008)", "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –∑–∞–∫–∞–∑ ‚Ññ5005")
    log.message_received("–ú–∞—Å—Ç–µ—Ä –†–æ–º–∞–Ω", "/orders")
    log.button_click("–ú–∞—Å—Ç–µ—Ä –†–æ–º–∞–Ω", "–ó–∞–∫–∞–∑ ‚Ññ5005", "order_details:5005")
    
    log.timing("–ü—Ä–æ—à–ª–æ 20 –º–∏–Ω—É—Ç", 1200.0)
    
    log.button_click("–ú–∞—Å—Ç–µ—Ä –†–æ–º–∞–Ω", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", "master_cancel:5005")
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –†–æ–º–∞–Ω", "–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–º–µ–Ω—ã:", has_buttons=True)
    
    log.button_click("–ú–∞—Å—Ç–µ—Ä –†–æ–º–∞–Ω", "–ù–µ –º–æ–≥—É –ø—Ä–∏–µ—Ö–∞—Ç—å", "cancel_reason:cant_come")
    
    log.db_write("orders", "UPDATE", {
        "id": 5005,
        "status": "searching",  # –í–µ—Ä–Ω—É–ª–∏ –≤ –ø–æ–∏—Å–∫
        "master_id": None,
        "assigned_at": None,
        "master_cancellation_reason": "cant_come",
        "cancelled_by_master_at": "2025-10-04 17:20:00"
    })
    
    log.db_read("masters", "SELECT cancellation_count FROM masters WHERE id=2008", 0)
    log.db_write("masters", "UPDATE", {
        "id": 2008,
        "cancellation_count": 1,  # –ë—ã–ª–æ 0, —Å—Ç–∞–ª–æ 1
        "last_cancellation_at": "2025-10-04 17:20:00"
    })
    
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –†–æ–º–∞–Ω", "–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω. –£ –≤–∞—Å 1 –æ—Ç–º–µ–Ω–∞ (–ø—Ä–∏ 3-—Ö = –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞)")
    log.message_sent("–ö–ª–∏–µ–Ω—Ç", "–ú–∞—Å—Ç–µ—Ä –æ—Ç–º–µ–Ω–∏–ª –∑–∞–∫–∞–∑. –ò—â–µ–º –¥—Ä—É–≥–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞...")
    
    log.system_event("Autoassign –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω", "Order ID=5005, Round=1")
    
    log.success("–ó–∞–∫–∞–∑ –≤–µ—Ä–Ω—É–ª—Å—è –≤ –∞–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –º–∞—Å—Ç–µ—Ä—É +1 –æ—Ç–º–µ–Ω–∞")
    
    # --- –°–ò–ú–£–õ–Ø–¶–ò–Ø: 3-—è –æ—Ç–º–µ–Ω–∞ = –∞–≤—Ç–æ–±–ª–æ–∫ ---
    log.section("–ú–∞—Å—Ç–µ—Ä –¥–µ–ª–∞–µ—Ç 3-—é –æ—Ç–º–µ–Ω—É –ø–æ–¥—Ä—è–¥ ‚Üí –ê–í–¢–û–ë–õ–û–ö")
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–∫–∞–∑—ã 5006 –∏ 5007 (2-—è –∏ 3-—è –æ—Ç–º–µ–Ω–∞)
    log.system_event("–ü—Ä–æ–ø—É—Å–∫ 2-–π –∏ 3-–π –æ—Ç–º–µ–Ω—ã", "...")
    
    log.db_write("masters", "UPDATE", {
        "id": 2008,
        "cancellation_count": 3
    })
    
    log.system_event("Trigger: 3 –æ—Ç–º–µ–Ω—ã –ø–æ–¥—Ä—è–¥", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞")
    
    log.db_write("masters", "UPDATE", {
        "id": 2008,
        "is_blocked": True,
        "blocked_until": "2025-10-05 17:20:00",  # +24 —á–∞—Å–∞
        "block_reason": "3 –æ—Ç–º–µ–Ω—ã –ø–æ–¥—Ä—è–¥ (–∞–≤—Ç–æ–±–ª–æ–∫)"
    })
    
    log.message_sent("–ú–∞—Å—Ç–µ—Ä –†–æ–º–∞–Ω", "‚õî –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ 24 —á–∞—Å–∞ –∑–∞ 3 –æ—Ç–º–µ–Ω—ã –ø–æ–¥—Ä—è–¥")
    log.message_sent("–ê–¥–º–∏–Ω-–±–æ—Ç", "‚ö†Ô∏è –ú–∞—Å—Ç–µ—Ä –†–æ–º–∞–Ω (ID=2008) –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (3 –æ—Ç–º–µ–Ω—ã)")
    
    log.success("–ú–∞—Å—Ç–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ 24 —á–∞—Å–∞")
    
    # –ü–†–û–í–ï–†–ö–ò
    log.section("–§–ò–ù–ê–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò")
    
    log.assertion("–ó–∞–∫–∞–∑ –≤–µ—Ä–Ω—É–ª—Å—è –≤ —Å—Ç–∞—Ç—É—Å 'searching'", True)
    log.assertion("–°—á—ë—Ç—á–∏–∫ –æ—Ç–º–µ–Ω –º–∞—Å—Ç–µ—Ä–∞ —É–≤–µ–ª–∏—á–∏–ª—Å—è", True)
    log.assertion("–ü–æ—Å–ª–µ 3-—Ö –æ—Ç–º–µ–Ω –º–∞—Å—Ç–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω", True)
    log.assertion("–ê–¥–º–∏–Ω –ø–æ–ª—É—á–∏–ª –∞–ª–µ—Ä—Ç", True)
    
    log.success("‚úÖ –°–¶–ï–ù–ê–†–ò–ô 4 –ó–ê–í–ï–†–®–Å–ù")
    
    return log.logs


# ============================================================================
# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–¶–ï–ù–ê–†–ò–ò (–∫—Ä–∞—Ç–∫–æ)
# ============================================================================

# –°—Ü–µ–Ω–∞—Ä–∏–π 5: –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω–∞—è –∑–∞—è–≤–∫–∞
# –°—Ü–µ–Ω–∞—Ä–∏–π 6: –ú–∞—Å—Ç–µ—Ä –Ω–µ –ø—Ä–∏—à—ë–ª (no-show)
# –°—Ü–µ–Ω–∞—Ä–∏–π 7: –°–ø–æ—Ä –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
# –°—Ü–µ–Ω–∞—Ä–∏–π 8: –ü—Ä–æ—Å—Ä–æ—á–∫–∞ –º–∞—Å—Ç–µ—Ä–∞ (>3—á) ‚Üí –∫–æ–º–∏—Å—Å–∏—è 60%
# –°—Ü–µ–Ω–∞—Ä–∏–π 9: –†–µ—Ñ–µ—Ä–∞–ª–∫–∞ –∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
# –°—Ü–µ–Ω–∞—Ä–∏–π 10: –°–º–µ–Ω–∞ –≥–æ—Ä–æ–¥–∞ –º–∞—Å—Ç–µ—Ä–æ–º
# ... –∏ —Ç.–¥.

# –í—Å–µ–≥–æ –º–æ–∂–Ω–æ –æ–ø–∏—Å–∞—Ç—å 20-30 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è
