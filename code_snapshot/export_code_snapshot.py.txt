#!/usr/bin/env python3
"""
–≠–∫—Å–ø–æ—Ä—Ç –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã Field Service –ø—Ä–æ–µ–∫—Ç–∞
–°–æ–∑–¥–∞—ë—Ç —Å–Ω–∞–ø—à–æ—Ç –≤ –ø–∞–ø–∫–µ code_snapshot —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ä–∞–±–æ—Ç—ã (—Ç–∏—Ö–∏–π —Ä–µ–∂–∏–º)
"""

import shutil
from pathlib import Path
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PROJECT_ROOT = Path(__file__).parent
SNAPSHOT_DIR = PROJECT_ROOT / "code_snapshot"

# –†–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
INCLUDE_EXTENSIONS = {
    # –ö–æ–¥
    '.py', '.pyi',
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    '.json', '.yaml', '.yml', '.toml', '.ini', '.cfg', '.conf',
    # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
    '.md', '.txt', '.rst',
    # SQL –∏ —Å–∫—Ä–∏–ø—Ç—ã
    '.sql', '.sh', '.ps1', '.bat',
    # Docker –∏ CI/CD
    '.dockerignore', '.editorconfig', '.gitattributes',
    # –î—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ
    '.env.example', '.gitignore', '.pre-commit-config.yaml'
}

# –§–∞–π–ª—ã –ë–ï–ó —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è
INCLUDE_NO_EXTENSION = {
    'Dockerfile', 'Makefile', 'Procfile', 'requirements.txt',
    'LICENSE', 'README', 'CHANGELOG', 'CONTRIBUTING'
}

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è
EXCLUDE_DIRS = {
    # Python
    '__pycache__', '.pytest_cache', '.ruff_cache', '.mypy_cache',
    '.tox', '.nox', 'htmlcov', '.coverage',
    # Git
    '.git', '.github',
    # –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    'venv', 'env', '.env', '.venv', 'virtualenv',
    # Node.js (–µ—Å–ª–∏ –µ—Å—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)
    'node_modules',
    # IDE
    '.vscode', '.idea', '.vs',
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ build
    '.local', 'dist', 'build', 'egg-info', '*.egg-info',
    # –°–Ω–∞–ø—à–æ—Ç—ã
    'code_snapshot',
    # Backup –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    'backup', '.backup'
}

# –§–∞–π–ª—ã –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è
EXCLUDE_FILES = {
    '.DS_Store', 'Thumbs.db', 
    '*.pyc', '*.pyo', '*.pyd',
    '.coverage', 'coverage.xml', 
    '*.log', '*.swp', '*.swo',
    '*~'  # Vim backup files
}

# –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è (deprecated, backup –∏ —Ç.–¥.)
EXCLUDE_PATTERNS = {
    '.deprecated', '.backup', '.old', '.bak'
}

def should_include_file(file_path: Path) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –≤–∫–ª—é—á–∞—Ç—å —Ñ–∞–π–ª –≤ —Å–Ω–∞–ø—à–æ—Ç"""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ deprecated/backup –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    for pattern in EXCLUDE_PATTERNS:
        if pattern in file_path.name.lower():
            return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    if file_path.name in EXCLUDE_FILES:
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —á–∞—Å—Ç—è–º –ø—É—Ç–∏ (–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)
    for part in file_path.parts:
        if part in EXCLUDE_DIRS:
            return False
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ .backup –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        for pattern in EXCLUDE_PATTERNS:
            if pattern in part.lower():
                return False
    
    # –§–∞–π–ª—ã –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫
    if not file_path.suffix:
        return file_path.name in INCLUDE_NO_EXTENSION
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
    return file_path.suffix in INCLUDE_EXTENSIONS

def export_code_snapshot():
    """–°–æ–∑–¥–∞—ë—Ç —Å–Ω–∞–ø—à–æ—Ç –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã"""
    
    print(f"üöÄ –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã Field Service –ø—Ä–æ–µ–∫—Ç–∞")
    print(f"üìÇ –ö–æ—Ä–µ–Ω—å: {PROJECT_ROOT}")
    print(f"üìÅ –°–Ω–∞–ø—à–æ—Ç: {SNAPSHOT_DIR}")
    print()
    
    # –û—á–∏—Å—Ç–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–Ω–∞–ø—à–æ—Ç–∞
    if SNAPSHOT_DIR.exists():
        print("üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ —Å–Ω–∞–ø—à–æ—Ç–∞...")
        shutil.rmtree(SNAPSHOT_DIR)
    
    SNAPSHOT_DIR.mkdir(parents=True, exist_ok=True)
    
    # –°—á—ë—Ç—á–∏–∫–∏
    files_exported = 0
    total_size = 0
    errors = []
    
    # –ü—Ä–æ—Ö–æ–¥ –ø–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º –ø—Ä–æ–µ–∫—Ç–∞ (–¢–ò–•–ò–ô –†–ï–ñ–ò–ú)
    print("üì¶ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
    
    for file_path in PROJECT_ROOT.rglob('*'):
        if not file_path.is_file():
            continue
        
        if not should_include_file(file_path):
            continue
        
        # –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
        rel_path = file_path.relative_to(PROJECT_ROOT)
        
        # –¶–µ–ª–µ–≤–æ–π –ø—É—Ç—å –≤ —Å–Ω–∞–ø—à–æ—Ç–µ (—Å .txt —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –¥–ª—è –∫–æ–¥–∞)
        if file_path.suffix in INCLUDE_EXTENSIONS or file_path.name in INCLUDE_NO_EXTENSION:
            target_path = SNAPSHOT_DIR / f"{rel_path}.txt"
        else:
            target_path = SNAPSHOT_DIR / rel_path
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        target_path.parent.mkdir(parents=True, exist_ok=True)
        
        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        try:
            shutil.copy2(file_path, target_path)
            files_exported += 1
            total_size += file_path.stat().st_size
        except Exception as e:
            errors.append(f"{rel_path}: {e}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ README –≤ —Å–Ω–∞–ø—à–æ—Ç–µ
    readme_content = f"""# Field Service Code Snapshot

**–°–æ–∑–¥–∞–Ω:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}  
**–§–∞–π–ª–æ–≤:** {files_exported}  
**–†–∞–∑–º–µ—Ä:** {total_size / 1024 / 1024:.2f} MB

## üìã –û —Å–Ω–∞–ø—à–æ—Ç–µ

–í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Å –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π.
–§–∞–π–ª—ã –∫–æ–¥–∞ –∏–º–µ—é—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ `.txt` –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è –≤ –ª—é–±–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ.

## üì¶ –í–∫–ª—é—á—ë–Ω–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤

### –ö–æ–¥
- Python: `.py`, `.pyi`

### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
- –§–æ—Ä–º–∞—Ç—ã: `.json`, `.yaml`, `.yml`, `.toml`, `.ini`, `.cfg`, `.conf`
- Docker: `Dockerfile`, `.dockerignore`
- Git: `.gitignore`, `.gitattributes`

### –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- –§–æ—Ä–º–∞—Ç—ã: `.md`, `.txt`, `.rst`

### –°–∫—Ä–∏–ø—Ç—ã –∏ SQL
- –°–∫—Ä–∏–ø—Ç—ã: `.sql`, `.sh`, `.ps1`, `.bat`
- –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: `requirements.txt`

### –î—Ä—É–≥–∏–µ
- `.env.example`, `.editorconfig`, `.pre-commit-config.yaml`

## üö´ –ò—Å–∫–ª—é—á—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã

### –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
{', '.join(sorted(EXCLUDE_DIRS))}

### –ü–∞—Ç—Ç–µ—Ä–Ω—ã
- –§–∞–π–ª—ã —Å `.deprecated`, `.backup`, `.old`, `.bak`
- Backup –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (`admin_bot.backup` –∏ —Ç.–¥.)

### –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
- `*.pyc`, `*.pyo`, `*.pyd`
- `*.log`, `.DS_Store`, `Thumbs.db`

## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

- **–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤:** {files_exported}
- **–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä:** {total_size / 1024 / 1024:.2f} MB
- **–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:** {(total_size / files_exported / 1024):.2f} KB
"""

    if errors:
        readme_content += f"\n## ‚ö†Ô∏è –û—à–∏–±–∫–∏ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ ({len(errors)})\n\n"
        for error in errors[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –æ—à–∏–±–æ–∫
            readme_content += f"- {error}\n"
        if len(errors) > 10:
            readme_content += f"\n... –∏ –µ—â—ë {len(errors) - 10} –æ—à–∏–±–æ–∫\n"
    
    (SNAPSHOT_DIR / "README.md").write_text(readme_content, encoding='utf-8')
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞-–∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
    structure_content = "# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ Field Service\n\n"
    structure_content += "```\n"
    
    # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å—Ç—Ä–æ–∏–º –¥–µ—Ä–µ–≤–æ (—Ç–æ–ª—å–∫–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)
    def build_tree(path: Path, prefix: str = "", is_last: bool = True):
        lines = []
        if path.is_dir():
            # –ù–∞–∑–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            connector = "‚îî‚îÄ‚îÄ " if is_last else "‚îú‚îÄ‚îÄ "
            lines.append(f"{prefix}{connector}{path.name}/\n")
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            subdirs = [d for d in sorted(path.iterdir()) if d.is_dir() and d.name not in EXCLUDE_DIRS]
            
            # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏–º
            for i, subdir in enumerate(subdirs):
                extension = "    " if is_last else "‚îÇ   "
                is_last_subdir = (i == len(subdirs) - 1)
                lines.extend(build_tree(subdir, prefix + extension, is_last_subdir))
        
        return lines
    
    # –°—Ç—Ä–æ–∏–º –¥–µ—Ä–µ–≤–æ –¥–ª—è field-service
    field_service_path = PROJECT_ROOT / "field-service"
    if field_service_path.exists():
        structure_content += "field-service/\n"
        structure_lines = build_tree(field_service_path / "field_service", "", True)
        structure_content += "".join(structure_lines)
    
    structure_content += "```\n"
    
    (SNAPSHOT_DIR / "PROJECT_STRUCTURE.md").write_text(structure_content, encoding='utf-8')
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print()
    print("=" * 70)
    print(f"‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!")
    print()
    print(f"üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   ‚Ä¢ –§–∞–π–ª–æ–≤ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {files_exported}")
    print(f"   ‚Ä¢ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {total_size / 1024 / 1024:.2f} MB")
    print(f"   ‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {(total_size / files_exported / 1024):.2f} KB")
    if errors:
        print(f"   ‚ö†Ô∏è  –û—à–∏–±–æ–∫ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏: {len(errors)}")
    print()
    print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç: {SNAPSHOT_DIR}")
    print("=" * 70)

if __name__ == "__main__":
    try:
        export_code_snapshot()
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è  –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        raise
